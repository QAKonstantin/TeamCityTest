{"uid":"f8522baf4a4397a6","name":"Авторизация под разными ролями и проверка ссылок в футере","fullName":"tests.frontend.test_check_footer#test_e2e_check_footer_by_roles","historyId":"d44002a852512edd47a0d9d2c700c881","time":{"start":1711452165301,"stop":1711452165301,"duration":0},"status":"broken","statusMessage":"ValueError: Unexpected status code: 401, expected: 200","statusTrace":"self = <api.auth_api.AuthAPI object at 0x7f677add1510>\nuser_creds = ('', '8976389362930650481')\n\n    def auth_and_get_csrf(self, user_creds):\n        self.session.auth = user_creds\n        try:\n>           csrf_token = self.send_request(\"GET\", \"/authenticationTest.html?csrf\").text\n\napi/auth_api.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.auth_api.AuthAPI object at 0x7f677add1510>, method = 'GET'\nendpoint = '/authenticationTest.html?csrf', data = None\nexpected_status = <HTTPStatus.OK: 200>, need_logging = True\nneed_verify_status = True\n\n    def send_request(self, method, endpoint, data=None, expected_status=HTTPStatus.OK, need_logging=True,\n                     need_verify_status=True):\n        \"\"\"\n        Врапер для запросов. Позволяет прикручивать дополнительную логику\n        :param method: Метод запроса\n        :param endpoint: Ендпоинт для склейки с BASE_URL\n        :param data: Тело запроса. По умолчанию пустое, чтобы пропускало no-content запросы\n        :param expected_status: Ожидаемый статус код\n        :param need_logging: Флаг для логирования. По умолчанию = True\n        :param need_verify_status: Флаг для проверки статус кода в ответе. По умолчанию = True\n        :return: Возвращает объект ответа\n        \"\"\"\n        url = f\"{self.base_url}{endpoint}\"\n        response = self.session.request(method=method, url=url, json=data)\n        if need_logging:\n            self.log_request_and_response(response, expected_status, need_verify_status)\n        if need_verify_status:\n            if response.status_code != expected_status:\n>               raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\nE               ValueError: Unexpected status code: 401, expected: 200\n\ncustom_requester/custom_requester.py:34: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nuser_session = <function user_session.<locals>._create_user_session at 0x7f677adc4e50>\n\n    @pytest.fixture\n    def super_admin(user_session):\n        new_session = user_session()\n        super_admin = User(SuperAdminCreds.USERNAME, SuperAdminCreds.PASSWORD, None, new_session,\n                           [\"SUPER_ADMIN\"])\n>       super_admin.api_manager.auth_api.auth_and_get_csrf(super_admin.creds)\n\nconftest.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.auth_api.AuthAPI object at 0x7f677add1510>\nuser_creds = ('', '8976389362930650481')\n\n    def auth_and_get_csrf(self, user_creds):\n        self.session.auth = user_creds\n        try:\n            csrf_token = self.send_request(\"GET\", \"/authenticationTest.html?csrf\").text\n        except Exception as e:\n>           raise ValueError(f\"{e}\")\nE           ValueError: Unexpected status code: 401, expected: 200\n\napi/auth_api.py:11: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1711452159611,"stop":1711452159648,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"browser","time":{"start":1711452165714,"stop":1711452167058,"duration":1344},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"user_session","time":{"start":1711452167058,"stop":1711452167058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"super_admin","time":{"start":1711452167058,"stop":1711452167070,"duration":12},"status":"broken","statusMessage":"ValueError: Unexpected status code: 401, expected: 200\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"/home/runner/.local/lib/python3.10/site-packages/pluggy/_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1149, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 923, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 51, in super_admin\n    super_admin.api_manager.auth_api.auth_and_get_csrf(super_admin.creds)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/auth_api.py\", line 11, in auth_and_get_csrf\n    raise ValueError(f\"{e}\")\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"ValueError: Unexpected status code: 401, expected: 200","statusTrace":"self = <api.auth_api.AuthAPI object at 0x7f677add1510>\nuser_creds = ('', '8976389362930650481')\n\n    def auth_and_get_csrf(self, user_creds):\n        self.session.auth = user_creds\n        try:\n>           csrf_token = self.send_request(\"GET\", \"/authenticationTest.html?csrf\").text\n\napi/auth_api.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.auth_api.AuthAPI object at 0x7f677add1510>, method = 'GET'\nendpoint = '/authenticationTest.html?csrf', data = None\nexpected_status = <HTTPStatus.OK: 200>, need_logging = True\nneed_verify_status = True\n\n    def send_request(self, method, endpoint, data=None, expected_status=HTTPStatus.OK, need_logging=True,\n                     need_verify_status=True):\n        \"\"\"\n        Врапер для запросов. Позволяет прикручивать дополнительную логику\n        :param method: Метод запроса\n        :param endpoint: Ендпоинт для склейки с BASE_URL\n        :param data: Тело запроса. По умолчанию пустое, чтобы пропускало no-content запросы\n        :param expected_status: Ожидаемый статус код\n        :param need_logging: Флаг для логирования. По умолчанию = True\n        :param need_verify_status: Флаг для проверки статус кода в ответе. По умолчанию = True\n        :return: Возвращает объект ответа\n        \"\"\"\n        url = f\"{self.base_url}{endpoint}\"\n        response = self.session.request(method=method, url=url, json=data)\n        if need_logging:\n            self.log_request_and_response(response, expected_status, need_verify_status)\n        if need_verify_status:\n            if response.status_code != expected_status:\n>               raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\nE               ValueError: Unexpected status code: 401, expected: 200\n\ncustom_requester/custom_requester.py:34: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nuser_session = <function user_session.<locals>._create_user_session at 0x7f677adc4e50>\n\n    @pytest.fixture\n    def super_admin(user_session):\n        new_session = user_session()\n        super_admin = User(SuperAdminCreds.USERNAME, SuperAdminCreds.PASSWORD, None, new_session,\n                           [\"SUPER_ADMIN\"])\n>       super_admin.api_manager.auth_api.auth_and_get_csrf(super_admin.creds)\n\nconftest.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.auth_api.AuthAPI object at 0x7f677add1510>\nuser_creds = ('', '8976389362930650481')\n\n    def auth_and_get_csrf(self, user_creds):\n        self.session.auth = user_creds\n        try:\n            csrf_token = self.send_request(\"GET\", \"/authenticationTest.html?csrf\").text\n        except Exception as e:\n>           raise ValueError(f\"{e}\")\nE           ValueError: Unexpected status code: 401, expected: 200\n\napi/auth_api.py:11: ValueError","steps":[],"attachments":[{"uid":"fb30c248fcec80bb","name":"log","source":"fb30c248fcec80bb.txt","type":"text/plain","size":615}],"parameters":[],"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0},"afterStages":[{"name":"user_session::0","time":{"start":1711452167095,"stop":1711452167095,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"browser::0","time":{"start":1711452167200,"stop":1711452167546,"duration":346},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"labels":[{"name":"severity","value":"normal"},{"name":"suite","value":"Проверка футера"},{"name":"parentSuite","value":"UI тесты"},{"name":"subSuite","value":"Футер"},{"name":"tag","value":"footer"},{"name":"tag","value":"ui"},{"name":"host","value":"fv-az1391-496"},{"name":"thread","value":"7845-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.frontend.test_check_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'chromium'"},{"name":"role","value":"'PROJECT_ADMIN'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":3,"unknown":0,"total":4},"items":[{"uid":"57d20d32ee85fc60","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/121//#testresult/57d20d32ee85fc60","status":"passed","time":{"start":1711451133083,"stop":1711451161341,"duration":28258}},{"uid":"981ba23ffb11f809","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/120//#testresult/981ba23ffb11f809","status":"passed","time":{"start":1711369258676,"stop":1711369285022,"duration":26346}},{"uid":"1c2849d6c83f0a3a","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/119//#testresult/1c2849d6c83f0a3a","status":"passed","time":{"start":1711356148349,"stop":1711356178435,"duration":30086}}]},"tags":["ui","footer"]},"source":"f8522baf4a4397a6.json","parameterValues":["'chromium'","'PROJECT_ADMIN'"]}