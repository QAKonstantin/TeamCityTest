{"uid":"6628fe1edf5d1f1f","name":"Авторизация под разными ролями и проверка ссылок в футере","fullName":"tests.frontend.test_check_footer#test_e2e_check_footer_by_roles","historyId":"9f36a7653b9c32aae141b627f1dd1145","time":{"start":1711629766949,"stop":1711629766957,"duration":8},"status":"broken","statusMessage":"ValueError: Unexpected status code: 400, expected: 200","statusTrace":"browser = <Page url='about:blank'>\nuser_create = <function user_create.<locals>._user_create at 0x7f0bd837beb0>\nrole = 'AGENT_MANAGER'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.SYSTEM_ADMIN.value,\n        Roles.PROJECT_ADMIN.value,\n        Roles.AGENT_MANAGER.value,\n    ], ids=[\"By system admin\",\n            \"By project admin\",\n            \"By agent manager\"])\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.parent_suite(\"UI тесты\")\n    @allure.suite(\"Проверка футера\")\n    @allure.sub_suite(\"Футер\")\n    @allure.title(\"Авторизация под разными ролями и проверка ссылок в футере\")\n    @pytest.mark.ui\n    @pytest.mark.footer\n    def test_e2e_check_footer_by_roles(browser, user_create, role):\n        with allure.step(f'Создание пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/frontend/test_check_footer.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:66: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user_api.UserApi object at 0x7f0bd2fbcd30>, method = 'POST'\nendpoint = '/app/rest/users'\ndata = {'email': 'mirandamurphy@example.net', 'password': 'gpACf3PVrwU', 'roles': {'role': [{'roleId': 'AGENT_MANAGER', 'scope': 'g'}]}, 'username': 'itself'}\nexpected_status = <HTTPStatus.OK: 200>, need_logging = True\nneed_verify_status = True\n\n    def send_request(self, method, endpoint, data=None, expected_status=HTTPStatus.OK, need_logging=True,\n                     need_verify_status=True):\n        \"\"\"\n        Врапер для запросов. Позволяет прикручивать дополнительную логику\n        :param method: Метод запроса\n        :param endpoint: Ендпоинт для склейки с BASE_URL\n        :param data: Тело запроса. По умолчанию пустое, чтобы пропускало no-content запросы\n        :param expected_status: Ожидаемый статус код\n        :param need_logging: Флаг для логирования. По умолчанию = True\n        :param need_verify_status: Флаг для проверки статус кода в ответе. По умолчанию = True\n        :return: Возвращает объект ответа\n        \"\"\"\n        url = f\"{self.base_url}{endpoint}\"\n        response = self.session.request(method=method, url=url, json=data)\n        if need_logging:\n            self.log_request_and_response(response, expected_status, need_verify_status)\n        if need_verify_status:\n            if response.status_code != expected_status:\n>               raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\nE               ValueError: Unexpected status code: 400, expected: 200\n\ncustom_requester/custom_requester.py:34: ValueError","flaky":true,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1711629625578,"stop":1711629625611,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser","time":{"start":1711629764441,"stop":1711629766942,"duration":2501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session","time":{"start":1711629766942,"stop":1711629766942,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"super_admin","time":{"start":1711629766942,"stop":1711629766948,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_create","time":{"start":1711629766948,"stop":1711629766948,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"ValueError: Unexpected status code: 400, expected: 200","statusTrace":"browser = <Page url='about:blank'>\nuser_create = <function user_create.<locals>._user_create at 0x7f0bd837beb0>\nrole = 'AGENT_MANAGER'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.SYSTEM_ADMIN.value,\n        Roles.PROJECT_ADMIN.value,\n        Roles.AGENT_MANAGER.value,\n    ], ids=[\"By system admin\",\n            \"By project admin\",\n            \"By agent manager\"])\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.parent_suite(\"UI тесты\")\n    @allure.suite(\"Проверка футера\")\n    @allure.sub_suite(\"Футер\")\n    @allure.title(\"Авторизация под разными ролями и проверка ссылок в футере\")\n    @pytest.mark.ui\n    @pytest.mark.footer\n    def test_e2e_check_footer_by_roles(browser, user_create, role):\n        with allure.step(f'Создание пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/frontend/test_check_footer.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:66: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user_api.UserApi object at 0x7f0bd2fbcd30>, method = 'POST'\nendpoint = '/app/rest/users'\ndata = {'email': 'mirandamurphy@example.net', 'password': 'gpACf3PVrwU', 'roles': {'role': [{'roleId': 'AGENT_MANAGER', 'scope': 'g'}]}, 'username': 'itself'}\nexpected_status = <HTTPStatus.OK: 200>, need_logging = True\nneed_verify_status = True\n\n    def send_request(self, method, endpoint, data=None, expected_status=HTTPStatus.OK, need_logging=True,\n                     need_verify_status=True):\n        \"\"\"\n        Врапер для запросов. Позволяет прикручивать дополнительную логику\n        :param method: Метод запроса\n        :param endpoint: Ендпоинт для склейки с BASE_URL\n        :param data: Тело запроса. По умолчанию пустое, чтобы пропускало no-content запросы\n        :param expected_status: Ожидаемый статус код\n        :param need_logging: Флаг для логирования. По умолчанию = True\n        :param need_verify_status: Флаг для проверки статус кода в ответе. По умолчанию = True\n        :return: Возвращает объект ответа\n        \"\"\"\n        url = f\"{self.base_url}{endpoint}\"\n        response = self.session.request(method=method, url=url, json=data)\n        if need_logging:\n            self.log_request_and_response(response, expected_status, need_verify_status)\n        if need_verify_status:\n            if response.status_code != expected_status:\n>               raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\nE               ValueError: Unexpected status code: 400, expected: 200\n\ncustom_requester/custom_requester.py:34: ValueError","steps":[{"name":"Создание пользователя с ролью AGENT_MANAGER","time":{"start":1711629766949,"stop":1711629766956,"duration":7},"status":"broken","statusMessage":"ValueError: Unexpected status code: 400, expected: 200\n","statusTrace":"  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/tests/frontend/test_check_footer.py\", line 24, in test_e2e_check_footer_by_roles\n    role_user = user_create(role)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 66, in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/user_api.py\", line 9, in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"aafbc7e0505215b4","name":"log","source":"aafbc7e0505215b4.txt","type":"text/plain","size":1588}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"user_create::0","time":{"start":1711629766968,"stop":1711629766968,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session::0","time":{"start":1711629766969,"stop":1711629766969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"browser::0","time":{"start":1711629799097,"stop":1711629800131,"duration":1034},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"Проверка футера"},{"name":"subSuite","value":"Футер"},{"name":"parentSuite","value":"UI тесты"},{"name":"severity","value":"normal"},{"name":"tag","value":"footer"},{"name":"tag","value":"ui"},{"name":"host","value":"fv-az1022-530"},{"name":"thread","value":"8369-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.frontend.test_check_footer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'firefox'"},{"name":"role","value":"'AGENT_MANAGER'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":1,"skipped":0,"passed":11,"unknown":0,"total":15},"items":[{"uid":"a753a76b7996e96c","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/155//#testresult/a753a76b7996e96c","status":"passed","time":{"start":1711628756340,"stop":1711628786099,"duration":29759}},{"uid":"933ea1c2f2b83249","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/154//#testresult/933ea1c2f2b83249","status":"failed","statusDetails":"AssertionError: Кнопка span.ring-link-inner:has-text('About TeamCity') неактивна","time":{"start":1711627660285,"stop":1711627706103,"duration":45818}},{"uid":"6913264ccac7757f","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/153//#testresult/6913264ccac7757f","status":"failed","statusDetails":"AssertionError: Locator expected to be enabled\nActual value: None \nCall log:\nLocatorAssertions.to_be_enabled with timeout 30000ms\n  - waiting for locator(\"span.ring-link-inner:has-text('About TeamCity')\")","time":{"start":1711626742768,"stop":1711626782017,"duration":39249}},{"uid":"dc05cce7252fe0b0","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/152//#testresult/dc05cce7252fe0b0","status":"failed","statusDetails":"AssertionError: Locator expected to be enabled\nActual value: None \nCall log:\nLocatorAssertions.to_be_enabled with timeout 10000ms\n  - waiting for locator(\"span.ring-link-inner:has-text('About TeamCity')\")","time":{"start":1711625821382,"stop":1711625848479,"duration":27097}},{"uid":"62a9c488f125935b","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/151//#testresult/62a9c488f125935b","status":"passed","time":{"start":1711482079059,"stop":1711482105292,"duration":26233}},{"uid":"7fcfd8489ec2bf66","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/150//#testresult/7fcfd8489ec2bf66","status":"passed","time":{"start":1711481405507,"stop":1711481429853,"duration":24346}},{"uid":"fe7c284c6e460c62","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/149//#testresult/fe7c284c6e460c62","status":"passed","time":{"start":1711480438355,"stop":1711480444098,"duration":5743}},{"uid":"a9037dfcb0dc31a7","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/148//#testresult/a9037dfcb0dc31a7","status":"passed","time":{"start":1711479252784,"stop":1711479257885,"duration":5101}},{"uid":"a0fde255cde3e3bd","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/147//#testresult/a0fde255cde3e3bd","status":"passed","time":{"start":1711478355478,"stop":1711478380279,"duration":24801}},{"uid":"846d030e1753f4c5","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/146//#testresult/846d030e1753f4c5","status":"passed","time":{"start":1711477726758,"stop":1711477749793,"duration":23035}},{"uid":"8a5869745cf74dd5","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/145//#testresult/8a5869745cf74dd5","status":"passed","time":{"start":1711476946274,"stop":1711476971829,"duration":25555}},{"uid":"7e55591025733155","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/144//#testresult/7e55591025733155","status":"passed","time":{"start":1711476002116,"stop":1711476030983,"duration":28867}},{"uid":"f1668cce4afacd9e","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/144//#testresult/f1668cce4afacd9e","status":"passed","time":{"start":1711475536986,"stop":1711475568494,"duration":31508}},{"uid":"8c908eb2fea2664e","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/143//#testresult/8c908eb2fea2664e","status":"passed","time":{"start":1711475011058,"stop":1711475030931,"duration":19873}}]},"tags":["ui","footer"]},"source":"6628fe1edf5d1f1f.json","parameterValues":["'firefox'","'AGENT_MANAGER'"]}