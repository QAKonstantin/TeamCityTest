{"uid":"816529732ac1a7f3","name":"Проверка невозможности создания билд конфигурации","fullName":"tests.backend.test_create_build_conf.TestBuildConfCreate#test_create_build_conf_with_empty_attributes","historyId":"d82ad3bbfa11ca328b90f946ed386d09","time":{"start":1711695048644,"stop":1711695048940,"duration":296},"description":"Проверяется валидация с пустыми атрибутами билд конфигурации","descriptionHtml":"<p>Проверяется валидация с пустыми атрибутами билд конфигурации</p>\n","status":"broken","statusMessage":"ValueError: Unexpected status code: 400, expected: 200","statusTrace":"self = <test_create_build_conf.TestBuildConfCreate object at 0x7ff22e6373d0>\nproject_data = <function project_data.<locals>._create_project_data at 0x7ff22e69dcf0>\nbuild_conf_data = <function build_conf_data.<locals>._create_build_conf_data at 0x7ff22e69dd80>\nsuper_admin = <entities.user.User object at 0x7ff22e6b9420>, attribute = 'id'\nstatus_code = <HTTPStatus.INTERNAL_SERVER_ERROR: 500>\ntext_error = 'InvalidIdentifierException: Build configuration or template ID must not be empty'\nvalue = ''\n\n    @pytest.mark.parametrize((\"attribute\", \"status_code\", \"text_error\", \"value\"), [\n        (\"name\", HTTPStatus.BAD_REQUEST,\n         \"BadRequestException: When creating a build type, non empty name should be provided.\", ''),\n        (\"id\", HTTPStatus.INTERNAL_SERVER_ERROR,\n         \"InvalidIdentifierException: Build configuration or template ID must not be empty\", ''),\n        (\"project_id\", HTTPStatus.NOT_FOUND,\n         \"NotFoundException: No project found by locator 'count:1,id:\", '')\n    ], ids=[\"name\",\n            \"id\",\n            \"project_id\"])\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление билд конфигурациями\")\n    @allure.sub_suite(\"Создание билд конфигурации\")\n    @allure.sub_suite(\"Негативные сценарии\")\n    @allure.title('Проверка невозможности создания билд конфигурации')\n    @allure.description('Проверяется валидация с пустыми атрибутами билд конфигурации')\n    @pytest.mark.build_conf\n    @pytest.mark.api\n    def test_create_build_conf_with_empty_attributes(self, project_data, build_conf_data, super_admin, attribute,\n                                                     status_code, text_error, value):\n        with (allure.step('Подготовка данных для создания проекта и билд конфигурации')):\n            project_data_1 = project_data()\n            build_conf_data_1 = dict(BuildConfData.create_build_conf_data(project_data_1.id))\n            if attribute == \"project_id\":\n                build_conf_data_1[\"project\"][\"id\"] = ''\n            else:\n                build_conf_data_1[attribute] = value\n    \n        with allure.step('Отправка запроса на создание проекта'):\n>           created_project_response = super_admin.api_manager.project_api.create_project(\n                project_data_1.model_dump()).text\n\ntests/backend/test_create_build_conf.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/project_api.py:9: in create_project\n    return self.send_request(\"POST\", \"/app/rest/projects\", data=project_data,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.project_api.ProjectApi object at 0x7ff22e6b9540>, method = 'POST'\nendpoint = '/app/rest/projects'\ndata = {'copyAllAssociatedSettings': True, 'id': 'oueJhXITA15', 'name': 'recent', 'parentProject': {'locator': '_Root'}}\nexpected_status = <HTTPStatus.OK: 200>, need_logging = True\nneed_verify_status = True\n\n    def send_request(self, method, endpoint, data=None, expected_status=HTTPStatus.OK, need_logging=True,\n                     need_verify_status=True):\n        \"\"\"\n        Врапер для запросов. Позволяет прикручивать дополнительную логику\n        :param method: Метод запроса\n        :param endpoint: Ендпоинт для склейки с BASE_URL\n        :param data: Тело запроса. По умолчанию пустое, чтобы пропускало no-content запросы\n        :param expected_status: Ожидаемый статус код\n        :param need_logging: Флаг для логирования. По умолчанию = True\n        :param need_verify_status: Флаг для проверки статус кода в ответе. По умолчанию = True\n        :return: Возвращает объект ответа\n        \"\"\"\n        url = f\"{self.base_url}{endpoint}\"\n        response = self.session.request(method=method, url=url, json=data)\n        if need_logging:\n            self.log_request_and_response(response, expected_status, need_verify_status)\n        if need_verify_status:\n            if response.status_code != expected_status:\n>               raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\nE               ValueError: Unexpected status code: 400, expected: 200\n\ncustom_requester/custom_requester.py:34: ValueError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1711695048578,"stop":1711695048634,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"super_admin","time":{"start":1711695048634,"stop":1711695048642,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session","time":{"start":1711695048634,"stop":1711695048634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_data","time":{"start":1711695048642,"stop":1711695048642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"build_conf_data","time":{"start":1711695048643,"stop":1711695048643,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяется валидация с пустыми атрибутами билд конфигурации","status":"broken","statusMessage":"ValueError: Unexpected status code: 400, expected: 200","statusTrace":"self = <test_create_build_conf.TestBuildConfCreate object at 0x7ff22e6373d0>\nproject_data = <function project_data.<locals>._create_project_data at 0x7ff22e69dcf0>\nbuild_conf_data = <function build_conf_data.<locals>._create_build_conf_data at 0x7ff22e69dd80>\nsuper_admin = <entities.user.User object at 0x7ff22e6b9420>, attribute = 'id'\nstatus_code = <HTTPStatus.INTERNAL_SERVER_ERROR: 500>\ntext_error = 'InvalidIdentifierException: Build configuration or template ID must not be empty'\nvalue = ''\n\n    @pytest.mark.parametrize((\"attribute\", \"status_code\", \"text_error\", \"value\"), [\n        (\"name\", HTTPStatus.BAD_REQUEST,\n         \"BadRequestException: When creating a build type, non empty name should be provided.\", ''),\n        (\"id\", HTTPStatus.INTERNAL_SERVER_ERROR,\n         \"InvalidIdentifierException: Build configuration or template ID must not be empty\", ''),\n        (\"project_id\", HTTPStatus.NOT_FOUND,\n         \"NotFoundException: No project found by locator 'count:1,id:\", '')\n    ], ids=[\"name\",\n            \"id\",\n            \"project_id\"])\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление билд конфигурациями\")\n    @allure.sub_suite(\"Создание билд конфигурации\")\n    @allure.sub_suite(\"Негативные сценарии\")\n    @allure.title('Проверка невозможности создания билд конфигурации')\n    @allure.description('Проверяется валидация с пустыми атрибутами билд конфигурации')\n    @pytest.mark.build_conf\n    @pytest.mark.api\n    def test_create_build_conf_with_empty_attributes(self, project_data, build_conf_data, super_admin, attribute,\n                                                     status_code, text_error, value):\n        with (allure.step('Подготовка данных для создания проекта и билд конфигурации')):\n            project_data_1 = project_data()\n            build_conf_data_1 = dict(BuildConfData.create_build_conf_data(project_data_1.id))\n            if attribute == \"project_id\":\n                build_conf_data_1[\"project\"][\"id\"] = ''\n            else:\n                build_conf_data_1[attribute] = value\n    \n        with allure.step('Отправка запроса на создание проекта'):\n>           created_project_response = super_admin.api_manager.project_api.create_project(\n                project_data_1.model_dump()).text\n\ntests/backend/test_create_build_conf.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/project_api.py:9: in create_project\n    return self.send_request(\"POST\", \"/app/rest/projects\", data=project_data,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.project_api.ProjectApi object at 0x7ff22e6b9540>, method = 'POST'\nendpoint = '/app/rest/projects'\ndata = {'copyAllAssociatedSettings': True, 'id': 'oueJhXITA15', 'name': 'recent', 'parentProject': {'locator': '_Root'}}\nexpected_status = <HTTPStatus.OK: 200>, need_logging = True\nneed_verify_status = True\n\n    def send_request(self, method, endpoint, data=None, expected_status=HTTPStatus.OK, need_logging=True,\n                     need_verify_status=True):\n        \"\"\"\n        Врапер для запросов. Позволяет прикручивать дополнительную логику\n        :param method: Метод запроса\n        :param endpoint: Ендпоинт для склейки с BASE_URL\n        :param data: Тело запроса. По умолчанию пустое, чтобы пропускало no-content запросы\n        :param expected_status: Ожидаемый статус код\n        :param need_logging: Флаг для логирования. По умолчанию = True\n        :param need_verify_status: Флаг для проверки статус кода в ответе. По умолчанию = True\n        :return: Возвращает объект ответа\n        \"\"\"\n        url = f\"{self.base_url}{endpoint}\"\n        response = self.session.request(method=method, url=url, json=data)\n        if need_logging:\n            self.log_request_and_response(response, expected_status, need_verify_status)\n        if need_verify_status:\n            if response.status_code != expected_status:\n>               raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\nE               ValueError: Unexpected status code: 400, expected: 200\n\ncustom_requester/custom_requester.py:34: ValueError","steps":[{"name":"Подготовка данных для создания проекта и билд конфигурации","time":{"start":1711695048644,"stop":1711695048644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Отправка запроса на создание проекта","time":{"start":1711695048644,"stop":1711695048939,"duration":295},"status":"broken","statusMessage":"ValueError: Unexpected status code: 400, expected: 200\n","statusTrace":"  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/tests/backend/test_create_build_conf.py\", line 122, in test_create_build_conf_with_empty_attributes\n    created_project_response = super_admin.api_manager.project_api.create_project(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 9, in create_project\n    return self.send_request(\"POST\", \"/app/rest/projects\", data=project_data,\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c301e8b09d736cec","name":"log","source":"c301e8b09d736cec.txt","type":"text/plain","size":3008}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"build_conf_data::0","time":{"start":1711695049005,"stop":1711695049005,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_data::0","time":{"start":1711695049006,"stop":1711695049018,"duration":12},"status":"broken","statusMessage":"ValueError: Проект с id oueJhXITA15 не был создан\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 932, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 109, in project_data\n    super_admin.api_manager.project_api.clean_up_project(project_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 30, in clean_up_project\n    raise ValueError(f\"Проект с id {created_project_id} не был создан\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"user_session::0","time":{"start":1711695049019,"stop":1711695049019,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"parentSuite","value":"API тесты"},{"name":"subSuite","value":"Негативные сценарии"},{"name":"suite","value":"Управление билд конфигурациями"},{"name":"tag","value":"api"},{"name":"tag","value":"build_conf"},{"name":"host","value":"fv-az1116-975"},{"name":"thread","value":"7885-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.test_create_build_conf"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"attribute","value":"'id'"},{"name":"status_code","value":"<HTTPStatus.INTERNAL_SERVER_ERROR: 500>"},{"name":"text_error","value":"'InvalidIdentifierException: Build configuration or template ID must not be empty'"},{"name":"value","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":41,"unknown":0,"total":42},"items":[{"uid":"599bc8d2cf5cd99e","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/599bc8d2cf5cd99e","status":"passed","time":{"start":1711694289401,"stop":1711694290233,"duration":832}},{"uid":"c6973cc3c9a3b218","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/c6973cc3c9a3b218","status":"passed","time":{"start":1711658403595,"stop":1711658404742,"duration":1147}},{"uid":"acaa46fc0f0af257","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/acaa46fc0f0af257","status":"passed","time":{"start":1711657798905,"stop":1711657800132,"duration":1227}},{"uid":"5f58f2506026de14","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/5f58f2506026de14","status":"passed","time":{"start":1711657114131,"stop":1711657115181,"duration":1050}},{"uid":"805cb73ed5bda7ea","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/805cb73ed5bda7ea","status":"passed","time":{"start":1711655337805,"stop":1711655339398,"duration":1593}},{"uid":"86c2f86836eb13e8","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/86c2f86836eb13e8","status":"passed","time":{"start":1711654130600,"stop":1711654132568,"duration":1968}},{"uid":"2bd6be2d46f6e606","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/2bd6be2d46f6e606","status":"passed","time":{"start":1711653571549,"stop":1711653572552,"duration":1003}},{"uid":"c51e4905386b7c9c","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/c51e4905386b7c9c","status":"passed","time":{"start":1711653021473,"stop":1711653022519,"duration":1046}},{"uid":"5cb7349321dd4e19","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/5cb7349321dd4e19","status":"passed","time":{"start":1711652473640,"stop":1711652475911,"duration":2271}},{"uid":"c27a91b9da332164","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/c27a91b9da332164","status":"passed","time":{"start":1711651968862,"stop":1711651970038,"duration":1176}},{"uid":"8a68af2f420d035","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/8a68af2f420d035","status":"passed","time":{"start":1711647511431,"stop":1711647512814,"duration":1383}},{"uid":"3d72fd9590abee7e","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/3d72fd9590abee7e","status":"passed","time":{"start":1711646851812,"stop":1711646853878,"duration":2066}},{"uid":"913780b484e5d05d","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/913780b484e5d05d","status":"passed","time":{"start":1711646310497,"stop":1711646311596,"duration":1099}},{"uid":"77835cee067b0246","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/77835cee067b0246","status":"passed","time":{"start":1711645816496,"stop":1711645817622,"duration":1126}},{"uid":"be4f14eea89a97e3","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/be4f14eea89a97e3","status":"passed","time":{"start":1711645230084,"stop":1711645231211,"duration":1127}},{"uid":"3be8cf743db0ddad","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/167//#testresult/3be8cf743db0ddad","status":"passed","time":{"start":1711644390861,"stop":1711644391921,"duration":1060}},{"uid":"2575675308228243","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/166//#testresult/2575675308228243","status":"passed","time":{"start":1711643311416,"stop":1711643313055,"duration":1639}},{"uid":"79aae0552d6824d0","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/165//#testresult/79aae0552d6824d0","status":"passed","time":{"start":1711639507644,"stop":1711639508833,"duration":1189}},{"uid":"4aa86fcbf56717f4","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/164//#testresult/4aa86fcbf56717f4","status":"passed","time":{"start":1711637696157,"stop":1711637697298,"duration":1141}},{"uid":"dab4cff52a75878d","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/163//#testresult/dab4cff52a75878d","status":"passed","time":{"start":1711635947267,"stop":1711635948415,"duration":1148}}]},"tags":["api","build_conf"]},"source":"816529732ac1a7f3.json","parameterValues":["'id'","<HTTPStatus.INTERNAL_SERVER_ERROR: 500>","'InvalidIdentifierException: Build configuration or template ID must not be empty'","''"]}