{"uid":"b08492586b9cc49c","name":"Проверка невозможности создания билд конфигурации","fullName":"tests.backend.test_create_build_conf.TestBuildConfCreate#test_create_build_conf_with_empty_attributes","historyId":"d82ad3bbfa11ca328b90f946ed386d09","time":{"start":1712575679054,"stop":1712575679054,"duration":0},"description":"Проверяется валидация с пустыми атрибутами билд конфигурации","descriptionHtml":"<p>Проверяется валидация с пустыми атрибутами билд конфигурации</p>\n","status":"broken","statusMessage":"ValueError: Session.request() got an unexpected keyword argument 'session'","statusTrace":"self = <api.auth_api.AuthAPI object at 0x7f7e177e6710>\nuser_creds = ('', '5809787879577745982')\n\n    def auth_and_get_csrf(self, user_creds):\n        self.session.auth = user_creds\n        try:\n>           csrf_token = self.send_request(\"GET\", \"/authenticationTest.html\").text\n\napi/auth_api.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncustom_requester/custom_requester.py:35: in send_request\n    response: Response = CoverageListener(\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/listener.py:29: in __init__\n    self.response = requests.request(method, self.__uri.full, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmethod = 'GET', url = 'http://localhost:8111/authenticationTest.html'\nkwargs = {'json': None, 'session': <requests.sessions.Session object at 0x7f7e177e6890>}\nsession = <requests.sessions.Session object at 0x7f7e177e7040>\n\n    def request(method, url, **kwargs):\n        \"\"\"Constructs and sends a :class:`Request <Request>`.\n    \n        :param method: method for the new :class:`Request` object: ``GET``, ``OPTIONS``, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, or ``DELETE``.\n        :param url: URL for the new :class:`Request` object.\n        :param params: (optional) Dictionary, list of tuples or bytes to send\n            in the query string for the :class:`Request`.\n        :param data: (optional) Dictionary, list of tuples, bytes, or file-like\n            object to send in the body of the :class:`Request`.\n        :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.\n        :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.\n        :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.\n        :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': file-tuple}``) for multipart encoding upload.\n            ``file-tuple`` can be a 2-tuple ``('filename', fileobj)``, 3-tuple ``('filename', fileobj, 'content_type')``\n            or a 4-tuple ``('filename', fileobj, 'content_type', custom_headers)``, where ``'content-type'`` is a string\n            defining the content type of the given file and ``custom_headers`` a dict-like object containing additional headers\n            to add for the file.\n        :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.\n        :param timeout: (optional) How many seconds to wait for the server to send data\n            before giving up, as a float, or a :ref:`(connect timeout, read\n            timeout) <timeouts>` tuple.\n        :type timeout: float or tuple\n        :param allow_redirects: (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to ``True``.\n        :type allow_redirects: bool\n        :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.\n        :param verify: (optional) Either a boolean, in which case it controls whether we verify\n                the server's TLS certificate, or a string, in which case it must be a path\n                to a CA bundle to use. Defaults to ``True``.\n        :param stream: (optional) if ``False``, the response content will be immediately downloaded.\n        :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.\n        :return: :class:`Response <Response>` object\n        :rtype: requests.Response\n    \n        Usage::\n    \n          >>> import requests\n          >>> req = requests.request('GET', 'https://httpbin.org/get')\n          >>> req\n          <Response [200]>\n        \"\"\"\n    \n        # By using the 'with' statement we are sure the session is closed, thus we\n        # avoid leaving sockets open which can trigger a ResourceWarning in some\n        # cases, and look like a memory leak in others.\n        with sessions.Session() as session:\n>           return session.request(method=method, url=url, **kwargs)\nE           TypeError: Session.request() got an unexpected keyword argument 'session'\n\n../../../.local/lib/python3.10/site-packages/requests/api.py:59: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nuser_session = <function user_session.<locals>._create_user_session at 0x7f7e1771c790>\n\n    @pytest.fixture\n    def super_admin(user_session):\n        new_session = user_session()\n        super_admin = User(SuperAdminCreds.USERNAME, SuperAdminCreds.PASSWORD, None, new_session,\n                           [\"SUPER_ADMIN\"])\n>       super_admin.api_manager.auth_api.auth_and_get_csrf(super_admin.creds)\n\nconftest.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.auth_api.AuthAPI object at 0x7f7e177e6710>\nuser_creds = ('', '5809787879577745982')\n\n    def auth_and_get_csrf(self, user_creds):\n        self.session.auth = user_creds\n        try:\n            csrf_token = self.send_request(\"GET\", \"/authenticationTest.html\").text\n        except Exception as e:\n>           raise ValueError(f\"{e}\")\nE           ValueError: Session.request() got an unexpected keyword argument 'session'\n\napi/auth_api.py:11: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1712575679055,"stop":1712575679109,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage","time":{"start":1712575679109,"stop":1712575695001,"duration":15892},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session","time":{"start":1712575695001,"stop":1712575695001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"super_admin","time":{"start":1712575695001,"stop":1712575695001,"duration":0},"status":"broken","statusMessage":"ValueError: Session.request() got an unexpected keyword argument 'session'\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"/home/runner/.local/lib/python3.10/site-packages/pluggy/_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1149, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 923, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 81, in super_admin\n    super_admin.api_manager.auth_api.auth_and_get_csrf(super_admin.creds)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/auth_api.py\", line 11, in auth_and_get_csrf\n    raise ValueError(f\"{e}\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"user_session::0","time":{"start":1712575695164,"stop":1712575695164,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage::0","time":{"start":1712575695200,"stop":1712575701892,"duration":6692},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"Управление билд конфигурациями"},{"name":"severity","value":"normal"},{"name":"subSuite","value":"Негативные сценарии"},{"name":"parentSuite","value":"API тесты"},{"name":"tag","value":"api"},{"name":"tag","value":"build_conf"},{"name":"host","value":"fv-az525-371"},{"name":"thread","value":"7900-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.test_create_build_conf"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"attribute","value":"'id'"},{"name":"status_code","value":"<HTTPStatus.INTERNAL_SERVER_ERROR: 500>"},{"name":"text_error","value":"'InvalidIdentifierException: Build configuration or template ID must not be empty'"},{"name":"value","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":10,"unknown":0,"total":12},"items":[{"uid":"130b6f598fac65e6","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/221//#testresult/130b6f598fac65e6","status":"broken","statusDetails":"ValueError: Session.request() got an unexpected keyword argument 'session'","time":{"start":1712574353170,"stop":1712574353170,"duration":0}},{"uid":"18faddd20709c645","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/216//#testresult/18faddd20709c645","status":"passed","time":{"start":1712408228550,"stop":1712408229595,"duration":1045}},{"uid":"3e60c02f3e4cf0b6","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/215//#testresult/3e60c02f3e4cf0b6","status":"passed","time":{"start":1712160918627,"stop":1712160919611,"duration":984}},{"uid":"754bfcbd2d0dfb2e","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/214//#testresult/754bfcbd2d0dfb2e","status":"passed","time":{"start":1712160281000,"stop":1712160282058,"duration":1058}},{"uid":"5b60faa997818ae2","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/213//#testresult/5b60faa997818ae2","status":"passed","time":{"start":1712158392592,"stop":1712158393676,"duration":1084}},{"uid":"a04851175ba4df10","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/212//#testresult/a04851175ba4df10","status":"passed","time":{"start":1712158077391,"stop":1712158078344,"duration":953}},{"uid":"30861ee9638054a9","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/211//#testresult/30861ee9638054a9","status":"passed","time":{"start":1712157571166,"stop":1712157572153,"duration":987}},{"uid":"94e5d261907a5a5a","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/210//#testresult/94e5d261907a5a5a","status":"passed","time":{"start":1711983587130,"stop":1711983588150,"duration":1020}},{"uid":"da4f238cf1bdcbd6","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/208//#testresult/da4f238cf1bdcbd6","status":"passed","time":{"start":1711982399645,"stop":1711982400954,"duration":1309}},{"uid":"708ab27ee3e7a9bb","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/207//#testresult/708ab27ee3e7a9bb","status":"passed","time":{"start":1711981738672,"stop":1711981740562,"duration":1890}},{"uid":"c22c6d049e17d179","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/206//#testresult/c22c6d049e17d179","status":"passed","time":{"start":1711981074516,"stop":1711981075449,"duration":933}}]},"tags":["api","build_conf"]},"source":"b08492586b9cc49c.json","parameterValues":["'id'","<HTTPStatus.INTERNAL_SERVER_ERROR: 500>","'InvalidIdentifierException: Build configuration or template ID must not be empty'","''"]}