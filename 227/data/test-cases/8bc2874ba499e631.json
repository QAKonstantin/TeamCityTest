{"uid":"8bc2874ba499e631","name":"Проверка запуска билда","fullName":"tests.backend.test_run_build.TestRunBuild#test_run_build_by_all_roles","historyId":"13d8319349d41aa405d32005393b32a0","time":{"start":1712576164554,"stop":1712576164599,"duration":45},"description":"Проверяется запуск и успешная работа билда","descriptionHtml":"<p>Проверяется запуск и успешная работа билда</p>\n","status":"broken","statusMessage":"ValueError: Unexpected status code: 403, expected: 200","statusTrace":"self = <test_run_build.TestRunBuild object at 0x7f00687c44f0>\nproject_data = <function project_data.<locals>._create_project_data at 0x7f00687e3c70>\nbuild_conf_data = <function build_conf_data.<locals>._create_build_conf_data at 0x7f00686b37f0>\nbuild_run_data = <function build_run_data.<locals>._create_build_run_data at 0x7f00686b3370>\nsuper_admin = <entities.user.User object at 0x7f006866c6d0>\nuser_create = <function user_create.<locals>._user_create at 0x7f00686b3400>\nrole = 'SYSTEM_ADMIN'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.SYSTEM_ADMIN.value\n    ], ids=[\"By system admin\"])\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление запусками билдов\")\n    @allure.sub_suite(\"Запуск билда\")\n    @allure.title('Проверка запуска билда')\n    @allure.description('Проверяется запуск и успешная работа билда')\n    @pytest.mark.build_run\n    @pytest.mark.api\n    def test_run_build_by_all_roles(self, project_data, build_conf_data, build_run_data, super_admin, user_create,\n                                    role):\n        with allure.step('Подготовка данных для создания проекта, билд конфигурации и запуска билда'):\n            project_data_1 = project_data()\n            build_conf_data_1 = build_conf_data(project_data_1.id)\n            build_run_1 = build_run_data(build_conf_data_1.id)\n    \n        with allure.step(f'Создание и авторизация пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/backend/test_run_build.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:96: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user_api.UserApi object at 0x7f006866d2a0>, method = 'POST'\nendpoint = '/app/rest/users'\ndata = {'email': 'juliegomez@example.net', 'password': 'GaWxqwRrQyO', 'roles': {'role': [{'roleId': 'SYSTEM_ADMIN', 'scope': 'g'}]}, 'username': 'improve'}\nexpected_status = <HTTPStatus.OK: 200>, need_logging = True\nneed_verify_status = True\n\n    def send_request(self, method, endpoint, data=None, expected_status=HTTPStatus.OK, need_logging=True,\n                     need_verify_status=True):\n        \"\"\"\n        Врапер для запросов. Позволяет прикручивать дополнительную логику\n        :param method: Метод запроса\n        :param endpoint: Ендпоинт для склейки с BASE_URL\n        :param data: Тело запроса. По умолчанию пустое, чтобы пропускало no-content запросы\n        :param expected_status: Ожидаемый статус код\n        :param need_logging: Флаг для логирования. По умолчанию = True\n        :param need_verify_status: Флаг для проверки статус кода в ответе. По умолчанию = True\n        :return: Возвращает объект ответа\n        \"\"\"\n        if endpoint == \"/authenticationTest.html?csrf\":\n            url = f\"{self.base_url}{endpoint}\"\n            response = self.session.request(method=method, url=url, json=data)\n        else:\n            kwargs = {\"json\": data}\n            response: Response = CoverageListener(\n                method=method,\n                base_url=self.base_url,\n                raw_path=endpoint,\n                uri_params={},\n                session=self.session,\n                **kwargs\n            ).response\n            if need_logging:\n                self.log_request_and_response(response, expected_status, need_verify_status)\n            if need_verify_status:\n                if response.status_code != expected_status:\n>                   raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\nE                   ValueError: Unexpected status code: 403, expected: 200\n\ncustom_requester/custom_requester.py:47: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1712576149105,"stop":1712576149128,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage","time":{"start":1712576149129,"stop":1712576164172,"duration":15043},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"super_admin","time":{"start":1712576164498,"stop":1712576164535,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session","time":{"start":1712576164498,"stop":1712576164498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"build_run_data","time":{"start":1712576164536,"stop":1712576164536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_data","time":{"start":1712576164536,"stop":1712576164536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_create","time":{"start":1712576164536,"stop":1712576164536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"build_conf_data","time":{"start":1712576164536,"stop":1712576164536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяется запуск и успешная работа билда","status":"broken","statusMessage":"ValueError: Unexpected status code: 403, expected: 200","statusTrace":"self = <test_run_build.TestRunBuild object at 0x7f00687c44f0>\nproject_data = <function project_data.<locals>._create_project_data at 0x7f00687e3c70>\nbuild_conf_data = <function build_conf_data.<locals>._create_build_conf_data at 0x7f00686b37f0>\nbuild_run_data = <function build_run_data.<locals>._create_build_run_data at 0x7f00686b3370>\nsuper_admin = <entities.user.User object at 0x7f006866c6d0>\nuser_create = <function user_create.<locals>._user_create at 0x7f00686b3400>\nrole = 'SYSTEM_ADMIN'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.SYSTEM_ADMIN.value\n    ], ids=[\"By system admin\"])\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление запусками билдов\")\n    @allure.sub_suite(\"Запуск билда\")\n    @allure.title('Проверка запуска билда')\n    @allure.description('Проверяется запуск и успешная работа билда')\n    @pytest.mark.build_run\n    @pytest.mark.api\n    def test_run_build_by_all_roles(self, project_data, build_conf_data, build_run_data, super_admin, user_create,\n                                    role):\n        with allure.step('Подготовка данных для создания проекта, билд конфигурации и запуска билда'):\n            project_data_1 = project_data()\n            build_conf_data_1 = build_conf_data(project_data_1.id)\n            build_run_1 = build_run_data(build_conf_data_1.id)\n    \n        with allure.step(f'Создание и авторизация пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/backend/test_run_build.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:96: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user_api.UserApi object at 0x7f006866d2a0>, method = 'POST'\nendpoint = '/app/rest/users'\ndata = {'email': 'juliegomez@example.net', 'password': 'GaWxqwRrQyO', 'roles': {'role': [{'roleId': 'SYSTEM_ADMIN', 'scope': 'g'}]}, 'username': 'improve'}\nexpected_status = <HTTPStatus.OK: 200>, need_logging = True\nneed_verify_status = True\n\n    def send_request(self, method, endpoint, data=None, expected_status=HTTPStatus.OK, need_logging=True,\n                     need_verify_status=True):\n        \"\"\"\n        Врапер для запросов. Позволяет прикручивать дополнительную логику\n        :param method: Метод запроса\n        :param endpoint: Ендпоинт для склейки с BASE_URL\n        :param data: Тело запроса. По умолчанию пустое, чтобы пропускало no-content запросы\n        :param expected_status: Ожидаемый статус код\n        :param need_logging: Флаг для логирования. По умолчанию = True\n        :param need_verify_status: Флаг для проверки статус кода в ответе. По умолчанию = True\n        :return: Возвращает объект ответа\n        \"\"\"\n        if endpoint == \"/authenticationTest.html?csrf\":\n            url = f\"{self.base_url}{endpoint}\"\n            response = self.session.request(method=method, url=url, json=data)\n        else:\n            kwargs = {\"json\": data}\n            response: Response = CoverageListener(\n                method=method,\n                base_url=self.base_url,\n                raw_path=endpoint,\n                uri_params={},\n                session=self.session,\n                **kwargs\n            ).response\n            if need_logging:\n                self.log_request_and_response(response, expected_status, need_verify_status)\n            if need_verify_status:\n                if response.status_code != expected_status:\n>                   raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\nE                   ValueError: Unexpected status code: 403, expected: 200\n\ncustom_requester/custom_requester.py:47: ValueError","steps":[{"name":"Подготовка данных для создания проекта, билд конфигурации и запуска билда","time":{"start":1712576164555,"stop":1712576164555,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Создание и авторизация пользователя с ролью SYSTEM_ADMIN","time":{"start":1712576164555,"stop":1712576164598,"duration":43},"status":"broken","statusMessage":"ValueError: Unexpected status code: 403, expected: 200\n","statusTrace":"  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/tests/backend/test_run_build.py\", line 34, in test_run_build_by_all_roles\n    role_user = user_create(role)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 96, in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/user_api.py\", line 9, in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 47, in send_request\n    raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"7130f63bdfb4e38f","name":"log","source":"7130f63bdfb4e38f.txt","type":"text/plain","size":3769}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"build_run_data::0","time":{"start":1712576164622,"stop":1712576164622,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_create::0","time":{"start":1712576164622,"stop":1712576164622,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"build_conf_data::0","time":{"start":1712576164623,"stop":1712576164759,"duration":136},"status":"broken","statusMessage":"ValueError: Билд конфигурации с id FNur9SR5Zoh не был создан\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 932, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 136, in build_conf_data\n    super_admin.api_manager.build_conf_api.clean_up_build_conf(build_conf_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/build_conf_api.py\", line 31, in clean_up_build_conf\n    raise ValueError(f\"Билд конфигурации с id {create_build_id} не был создан\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"project_data::0","time":{"start":1712576164759,"stop":1712576164907,"duration":148},"status":"broken","statusMessage":"ValueError: Проект с id RUyEWfNPoC2 не был создан\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 932, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 120, in project_data\n    super_admin.api_manager.project_api.clean_up_project(project_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 30, in clean_up_project\n    raise ValueError(f\"Проект с id {created_project_id} не был создан\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"user_session::0","time":{"start":1712576164908,"stop":1712576164909,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage::0","time":{"start":1712576164909,"stop":1712576174398,"duration":9489},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"API тесты"},{"name":"severity","value":"critical"},{"name":"suite","value":"Управление запусками билдов"},{"name":"subSuite","value":"Запуск билда"},{"name":"tag","value":"api"},{"name":"tag","value":"build_run"},{"name":"host","value":"fv-az1543-340"},{"name":"thread","value":"7885-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.test_run_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"role","value":"'SYSTEM_ADMIN'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":10,"unknown":0,"total":13},"items":[{"uid":"4997e2314b9ff709","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/226//#testresult/4997e2314b9ff709","status":"broken","statusDetails":"ValueError: Session.request() got an unexpected keyword argument 'session'","time":{"start":1712575694709,"stop":1712575694709,"duration":0}},{"uid":"5ac200059331313c","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/221//#testresult/5ac200059331313c","status":"broken","statusDetails":"ValueError: Session.request() got an unexpected keyword argument 'session'","time":{"start":1712574368695,"stop":1712574368695,"duration":0}},{"uid":"ab408425338c39d8","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/216//#testresult/ab408425338c39d8","status":"passed","time":{"start":1712408231196,"stop":1712408236963,"duration":5767}},{"uid":"268c05e141b7ad7","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/215//#testresult/268c05e141b7ad7","status":"passed","time":{"start":1712160919604,"stop":1712160924048,"duration":4444}},{"uid":"9be133b9201457f2","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/214//#testresult/9be133b9201457f2","status":"passed","time":{"start":1712160282035,"stop":1712160286426,"duration":4391}},{"uid":"e3a730ed3fcfa0f9","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/213//#testresult/e3a730ed3fcfa0f9","status":"passed","time":{"start":1712158393623,"stop":1712158398062,"duration":4439}},{"uid":"6153646e8a825d04","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/212//#testresult/6153646e8a825d04","status":"passed","time":{"start":1712158078395,"stop":1712158082794,"duration":4399}},{"uid":"b61f29808d13f5c3","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/211//#testresult/b61f29808d13f5c3","status":"passed","time":{"start":1712157572075,"stop":1712157576471,"duration":4396}},{"uid":"dfa2d744da05fd0e","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/210//#testresult/dfa2d744da05fd0e","status":"passed","time":{"start":1711983588123,"stop":1711983592578,"duration":4455}},{"uid":"8b0f502463d7bfab","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/208//#testresult/8b0f502463d7bfab","status":"passed","time":{"start":1711982401047,"stop":1711982405358,"duration":4311}},{"uid":"3eae5207c6431c4d","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/207//#testresult/3eae5207c6431c4d","status":"passed","time":{"start":1711981740481,"stop":1711981744950,"duration":4469}},{"uid":"3bfb10b4e536ec5c","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/206//#testresult/3bfb10b4e536ec5c","status":"passed","time":{"start":1711981075418,"stop":1711981080609,"duration":5191}}]},"tags":["build_run","api"]},"source":"8bc2874ba499e631.json","parameterValues":["'SYSTEM_ADMIN'"]}