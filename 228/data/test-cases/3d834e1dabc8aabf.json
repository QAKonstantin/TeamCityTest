{"uid":"3d834e1dabc8aabf","name":"Проверка создания проекта","fullName":"tests.backend.test_create_project.TestProjectCreate#test_positive_creating_project_by_roles","historyId":"80dfc2167da551366d39fb93ebb8412a","time":{"start":1712577098053,"stop":1712577098100,"duration":47},"description":"Проверяется создание проекта и пополнение в общем списке проектов","descriptionHtml":"<p>Проверяется создание проекта и пополнение в общем списке проектов</p>\n","status":"broken","statusMessage":"ValueError: Unexpected status code: 403, expected: 200","statusTrace":"self = <test_create_project.TestProjectCreate object at 0x7fc7899aa440>\nproject_data = <function project_data.<locals>._create_project_data at 0x7fc78980b400>\nuser_create = <function user_create.<locals>._user_create at 0x7fc78980b490>\nrole = 'SYSTEM_ADMIN'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.SYSTEM_ADMIN.value,\n        Roles.PROJECT_ADMIN.value,\n        Roles.AGENT_MANAGER.value,\n    ], ids=[\"By system admin\",\n            \"By project admin\",\n            \"By agent manager\"])\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление проектами\")\n    @allure.sub_suite(\"Создание проекта\")\n    @allure.title('Проверка создания проекта')\n    @allure.description('Проверяется создание проекта и пополнение в общем списке проектов')\n    @pytest.mark.projects\n    @pytest.mark.api\n    def test_positive_creating_project_by_roles(self, project_data, user_create, role):\n        with allure.step('Подготовка данных для создания проекта'):\n            project_data_1 = project_data()\n    \n        with allure.step(f'Создание и авторизация пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/backend/test_create_project.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:96: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user_api.UserApi object at 0x7fc7899e2980>, method = 'POST'\nendpoint = '/app/rest/users'\ndata = {'email': 'frivera@example.com', 'password': 'Jk0FGkQoiZe', 'roles': {'role': [{'roleId': 'SYSTEM_ADMIN', 'scope': 'g'}]}, 'username': 'let'}\nexpected_status = <HTTPStatus.OK: 200>, need_logging = True\nneed_verify_status = True\n\n    def send_request(self, method, endpoint, data=None, expected_status=HTTPStatus.OK, need_logging=True,\n                     need_verify_status=True):\n        \"\"\"\n        Врапер для запросов. Позволяет прикручивать дополнительную логику\n        :param method: Метод запроса\n        :param endpoint: Ендпоинт для склейки с BASE_URL\n        :param data: Тело запроса. По умолчанию пустое, чтобы пропускало no-content запросы\n        :param expected_status: Ожидаемый статус код\n        :param need_logging: Флаг для логирования. По умолчанию = True\n        :param need_verify_status: Флаг для проверки статус кода в ответе. По умолчанию = True\n        :return: Возвращает объект ответа\n        \"\"\"\n        if endpoint == \"/authenticationTest.html?csrf\":\n            url = f\"{self.base_url}{endpoint}\"\n            response = self.session.request(method=method, url=url, json=data)\n        else:\n            kwargs = {\"json\": data}\n            response: Response = CoverageListener(\n                method=method,\n                base_url=self.base_url,\n                raw_path=endpoint,\n                uri_params={},\n                session=self.session,\n                **kwargs\n            ).response\n            if need_logging:\n                self.log_request_and_response(response, expected_status, need_verify_status)\n            if need_verify_status:\n                if response.status_code != expected_status:\n>                   raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\nE                   ValueError: Unexpected status code: 403, expected: 200\n\ncustom_requester/custom_requester.py:47: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1712577083305,"stop":1712577083364,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage","time":{"start":1712577083364,"stop":1712577097985,"duration":14621},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session","time":{"start":1712577097985,"stop":1712577097985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"super_admin","time":{"start":1712577097985,"stop":1712577098051,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_create","time":{"start":1712577098051,"stop":1712577098051,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_data","time":{"start":1712577098051,"stop":1712577098051,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяется создание проекта и пополнение в общем списке проектов","status":"broken","statusMessage":"ValueError: Unexpected status code: 403, expected: 200","statusTrace":"self = <test_create_project.TestProjectCreate object at 0x7fc7899aa440>\nproject_data = <function project_data.<locals>._create_project_data at 0x7fc78980b400>\nuser_create = <function user_create.<locals>._user_create at 0x7fc78980b490>\nrole = 'SYSTEM_ADMIN'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.SYSTEM_ADMIN.value,\n        Roles.PROJECT_ADMIN.value,\n        Roles.AGENT_MANAGER.value,\n    ], ids=[\"By system admin\",\n            \"By project admin\",\n            \"By agent manager\"])\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление проектами\")\n    @allure.sub_suite(\"Создание проекта\")\n    @allure.title('Проверка создания проекта')\n    @allure.description('Проверяется создание проекта и пополнение в общем списке проектов')\n    @pytest.mark.projects\n    @pytest.mark.api\n    def test_positive_creating_project_by_roles(self, project_data, user_create, role):\n        with allure.step('Подготовка данных для создания проекта'):\n            project_data_1 = project_data()\n    \n        with allure.step(f'Создание и авторизация пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/backend/test_create_project.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:96: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <api.user_api.UserApi object at 0x7fc7899e2980>, method = 'POST'\nendpoint = '/app/rest/users'\ndata = {'email': 'frivera@example.com', 'password': 'Jk0FGkQoiZe', 'roles': {'role': [{'roleId': 'SYSTEM_ADMIN', 'scope': 'g'}]}, 'username': 'let'}\nexpected_status = <HTTPStatus.OK: 200>, need_logging = True\nneed_verify_status = True\n\n    def send_request(self, method, endpoint, data=None, expected_status=HTTPStatus.OK, need_logging=True,\n                     need_verify_status=True):\n        \"\"\"\n        Врапер для запросов. Позволяет прикручивать дополнительную логику\n        :param method: Метод запроса\n        :param endpoint: Ендпоинт для склейки с BASE_URL\n        :param data: Тело запроса. По умолчанию пустое, чтобы пропускало no-content запросы\n        :param expected_status: Ожидаемый статус код\n        :param need_logging: Флаг для логирования. По умолчанию = True\n        :param need_verify_status: Флаг для проверки статус кода в ответе. По умолчанию = True\n        :return: Возвращает объект ответа\n        \"\"\"\n        if endpoint == \"/authenticationTest.html?csrf\":\n            url = f\"{self.base_url}{endpoint}\"\n            response = self.session.request(method=method, url=url, json=data)\n        else:\n            kwargs = {\"json\": data}\n            response: Response = CoverageListener(\n                method=method,\n                base_url=self.base_url,\n                raw_path=endpoint,\n                uri_params={},\n                session=self.session,\n                **kwargs\n            ).response\n            if need_logging:\n                self.log_request_and_response(response, expected_status, need_verify_status)\n            if need_verify_status:\n                if response.status_code != expected_status:\n>                   raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\nE                   ValueError: Unexpected status code: 403, expected: 200\n\ncustom_requester/custom_requester.py:47: ValueError","steps":[{"name":"Подготовка данных для создания проекта","time":{"start":1712577098054,"stop":1712577098055,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Создание и авторизация пользователя с ролью SYSTEM_ADMIN","time":{"start":1712577098055,"stop":1712577098096,"duration":41},"status":"broken","statusMessage":"ValueError: Unexpected status code: 403, expected: 200\n","statusTrace":"  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/tests/backend/test_create_project.py\", line 32, in test_positive_creating_project_by_roles\n    role_user = user_create(role)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 96, in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/user_api.py\", line 9, in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 47, in send_request\n    raise ValueError(f\"Unexpected status code: {response.status_code}, expected: {expected_status}\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"22653f8f6bb49aab","name":"log","source":"22653f8f6bb49aab.txt","type":"text/plain","size":2592}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"user_create::0","time":{"start":1712577098172,"stop":1712577098172,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_data::0","time":{"start":1712577098173,"stop":1712577098253,"duration":80},"status":"broken","statusMessage":"ValueError: Проект с id ffRj2LyGsBn не был создан\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 932, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 120, in project_data\n    super_admin.api_manager.project_api.clean_up_project(project_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 30, in clean_up_project\n    raise ValueError(f\"Проект с id {created_project_id} не был создан\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"user_session::0","time":{"start":1712577098254,"stop":1712577098254,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage::0","time":{"start":1712577098254,"stop":1712577108307,"duration":10053},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"critical"},{"name":"suite","value":"Управление проектами"},{"name":"subSuite","value":"Создание проекта"},{"name":"parentSuite","value":"API тесты"},{"name":"tag","value":"api"},{"name":"tag","value":"projects"},{"name":"host","value":"fv-az529-148"},{"name":"thread","value":"7776-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.test_create_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"role","value":"'SYSTEM_ADMIN'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":10,"unknown":0,"total":14},"items":[{"uid":"5cc0fee4670fcc21","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/227//#testresult/5cc0fee4670fcc21","status":"broken","statusDetails":"ValueError: Unexpected status code: 403, expected: 200","time":{"start":1712576165636,"stop":1712576165753,"duration":117}},{"uid":"464de37a8e05533a","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/226//#testresult/464de37a8e05533a","status":"broken","statusDetails":"ValueError: Session.request() got an unexpected keyword argument 'session'","time":{"start":1712575679072,"stop":1712575679072,"duration":0}},{"uid":"697fc277ec5e63ee","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/221//#testresult/697fc277ec5e63ee","status":"broken","statusDetails":"ValueError: Session.request() got an unexpected keyword argument 'session'","time":{"start":1712574353183,"stop":1712574353183,"duration":0}},{"uid":"90b669c9e4b4426","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/216//#testresult/90b669c9e4b4426","status":"passed","time":{"start":1712408230651,"stop":1712408231084,"duration":433}},{"uid":"729f9ee8c4d88edb","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/215//#testresult/729f9ee8c4d88edb","status":"passed","time":{"start":1712160918637,"stop":1712160919092,"duration":455}},{"uid":"d3dd811040042205","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/214//#testresult/d3dd811040042205","status":"passed","time":{"start":1712160281012,"stop":1712160281488,"duration":476}},{"uid":"330c24d86a13fc5c","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/213//#testresult/330c24d86a13fc5c","status":"passed","time":{"start":1712158392583,"stop":1712158393180,"duration":597}},{"uid":"b94b0b3a8ed17d25","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/212//#testresult/b94b0b3a8ed17d25","status":"passed","time":{"start":1712158077395,"stop":1712158077907,"duration":512}},{"uid":"d626a93d3b65fcf9","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/211//#testresult/d626a93d3b65fcf9","status":"passed","time":{"start":1712157571167,"stop":1712157571595,"duration":428}},{"uid":"c525eb1acf5b9a44","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/210//#testresult/c525eb1acf5b9a44","status":"passed","time":{"start":1711983587123,"stop":1711983587634,"duration":511}},{"uid":"fd693e8913e49cb","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/208//#testresult/fd693e8913e49cb","status":"passed","time":{"start":1711982399653,"stop":1711982400497,"duration":844}},{"uid":"99b9eed4f4305d04","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/207//#testresult/99b9eed4f4305d04","status":"passed","time":{"start":1711981738675,"stop":1711981740048,"duration":1373}},{"uid":"f3fca955c3bef0e4","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/206//#testresult/f3fca955c3bef0e4","status":"passed","time":{"start":1711981074515,"stop":1711981074985,"duration":470}}]},"tags":["projects","api"]},"source":"3d834e1dabc8aabf.json","parameterValues":["'SYSTEM_ADMIN'"]}