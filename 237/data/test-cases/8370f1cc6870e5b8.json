{"uid":"8370f1cc6870e5b8","name":"Проверка невозможности создания билд конфигурации","fullName":"tests.backend.test_create_build_conf.TestBuildConfCreate#test_create_build_conf_with_empty_attributes","historyId":"d82ad3bbfa11ca328b90f946ed386d09","time":{"start":1712583795603,"stop":1712583795686,"duration":83},"description":"Проверяется валидация с пустыми атрибутами билд конфигурации","descriptionHtml":"<p>Проверяется валидация с пустыми атрибутами билд конфигурации</p>\n","status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list","statusTrace":"self = <test_create_build_conf.TestBuildConfCreate object at 0x7f342c0c9d80>\nproject_data = <function project_data.<locals>._create_project_data at 0x7f3427fea7a0>\nbuild_conf_data = <function build_conf_data.<locals>._create_build_conf_data at 0x7f3427feac20>\nsuper_admin = <entities.user.User object at 0x7f3427f79660>, attribute = 'id'\nstatus_code = <HTTPStatus.INTERNAL_SERVER_ERROR: 500>\ntext_error = 'InvalidIdentifierException: Build configuration or template ID must not be empty'\nvalue = ''\n\n    @pytest.mark.parametrize((\"attribute\", \"status_code\", \"text_error\", \"value\"), [\n        (\"name\", HTTPStatus.BAD_REQUEST,\n         \"BadRequestException: When creating a build type, non empty name should be provided.\", ''),\n        (\"id\", HTTPStatus.INTERNAL_SERVER_ERROR,\n         \"InvalidIdentifierException: Build configuration or template ID must not be empty\", ''),\n        (\"project_id\", HTTPStatus.NOT_FOUND,\n         \"NotFoundException: No project found by locator 'count:1,id:\", '')\n    ], ids=[\"name\",\n            \"id\",\n            \"project_id\"])\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление билд конфигурациями\")\n    @allure.sub_suite(\"Создание билд конфигурации\")\n    @allure.sub_suite(\"Негативные сценарии\")\n    @allure.title('Проверка невозможности создания билд конфигурации')\n    @allure.description('Проверяется валидация с пустыми атрибутами билд конфигурации')\n    @pytest.mark.build_conf\n    @pytest.mark.api\n    def test_create_build_conf_with_empty_attributes(self, project_data, build_conf_data, super_admin, attribute,\n                                                     status_code, text_error, value):\n        with (allure.step('Подготовка данных для создания проекта и билд конфигурации')):\n            project_data_1 = project_data()\n            build_conf_data_1 = dict(BuildConfData.create_build_conf_data(project_data_1.id))\n            if attribute == \"project_id\":\n                build_conf_data_1[\"project\"][\"id\"] = ''\n            else:\n                build_conf_data_1[attribute] = value\n    \n        with allure.step('Отправка запроса на создание проекта'):\n>           created_project_response = super_admin.api_manager.project_api.create_project(\n                project_data_1.model_dump()).text\n\ntests/backend/test_create_build_conf.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/project_api.py:9: in create_project\n    return self.send_request(\"POST\", \"/app/rest/projects\", data=project_data,\ncustom_requester/custom_requester.py:34: in send_request\n    response = CoverageListener(\nutils/listener.py:33: in __init__\n    ).write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py:29: in write_schema\n    self.__manager.write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py:123: in write_schema\n    schema_dict = self._get_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:51: in _get_schema\n    \"paths\": self._paths(),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_coverage_py.results_writers.swagger_schemas_manager.SwaggerSchemasManager object at 0x7f3427f7b4f0>\n\n    def _paths(self):\n        path_ = self._uri.raw.split(\"?\")[0]\n        params = (\n>           self._get_path_params() + self._get_query_params() + self._get_body_params()\n        )\nE       TypeError: can only concatenate list (not \"dict\") to list\n\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:32: TypeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1712583779460,"stop":1712583779498,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"setup_swagger_coverage","time":{"start":1712583779498,"stop":1712583794868,"duration":15370},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"super_admin","time":{"start":1712583795573,"stop":1712583795601,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"user_session","time":{"start":1712583795573,"stop":1712583795573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"project_data","time":{"start":1712583795601,"stop":1712583795601,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"build_conf_data","time":{"start":1712583795602,"stop":1712583795602,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"testStage":{"description":"Проверяется валидация с пустыми атрибутами билд конфигурации","status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list","statusTrace":"self = <test_create_build_conf.TestBuildConfCreate object at 0x7f342c0c9d80>\nproject_data = <function project_data.<locals>._create_project_data at 0x7f3427fea7a0>\nbuild_conf_data = <function build_conf_data.<locals>._create_build_conf_data at 0x7f3427feac20>\nsuper_admin = <entities.user.User object at 0x7f3427f79660>, attribute = 'id'\nstatus_code = <HTTPStatus.INTERNAL_SERVER_ERROR: 500>\ntext_error = 'InvalidIdentifierException: Build configuration or template ID must not be empty'\nvalue = ''\n\n    @pytest.mark.parametrize((\"attribute\", \"status_code\", \"text_error\", \"value\"), [\n        (\"name\", HTTPStatus.BAD_REQUEST,\n         \"BadRequestException: When creating a build type, non empty name should be provided.\", ''),\n        (\"id\", HTTPStatus.INTERNAL_SERVER_ERROR,\n         \"InvalidIdentifierException: Build configuration or template ID must not be empty\", ''),\n        (\"project_id\", HTTPStatus.NOT_FOUND,\n         \"NotFoundException: No project found by locator 'count:1,id:\", '')\n    ], ids=[\"name\",\n            \"id\",\n            \"project_id\"])\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление билд конфигурациями\")\n    @allure.sub_suite(\"Создание билд конфигурации\")\n    @allure.sub_suite(\"Негативные сценарии\")\n    @allure.title('Проверка невозможности создания билд конфигурации')\n    @allure.description('Проверяется валидация с пустыми атрибутами билд конфигурации')\n    @pytest.mark.build_conf\n    @pytest.mark.api\n    def test_create_build_conf_with_empty_attributes(self, project_data, build_conf_data, super_admin, attribute,\n                                                     status_code, text_error, value):\n        with (allure.step('Подготовка данных для создания проекта и билд конфигурации')):\n            project_data_1 = project_data()\n            build_conf_data_1 = dict(BuildConfData.create_build_conf_data(project_data_1.id))\n            if attribute == \"project_id\":\n                build_conf_data_1[\"project\"][\"id\"] = ''\n            else:\n                build_conf_data_1[attribute] = value\n    \n        with allure.step('Отправка запроса на создание проекта'):\n>           created_project_response = super_admin.api_manager.project_api.create_project(\n                project_data_1.model_dump()).text\n\ntests/backend/test_create_build_conf.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/project_api.py:9: in create_project\n    return self.send_request(\"POST\", \"/app/rest/projects\", data=project_data,\ncustom_requester/custom_requester.py:34: in send_request\n    response = CoverageListener(\nutils/listener.py:33: in __init__\n    ).write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py:29: in write_schema\n    self.__manager.write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py:123: in write_schema\n    schema_dict = self._get_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:51: in _get_schema\n    \"paths\": self._paths(),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_coverage_py.results_writers.swagger_schemas_manager.SwaggerSchemasManager object at 0x7f3427f7b4f0>\n\n    def _paths(self):\n        path_ = self._uri.raw.split(\"?\")[0]\n        params = (\n>           self._get_path_params() + self._get_query_params() + self._get_body_params()\n        )\nE       TypeError: can only concatenate list (not \"dict\") to list\n\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:32: TypeError","steps":[{"name":"Подготовка данных для создания проекта и билд конфигурации","time":{"start":1712583795603,"stop":1712583795603,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Отправка запроса на создание проекта","time":{"start":1712583795603,"stop":1712583795686,"duration":83},"status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list\n","statusTrace":"  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/tests/backend/test_create_build_conf.py\", line 122, in test_create_build_conf_with_empty_attributes\n    created_project_response = super_admin.api_manager.project_api.create_project(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 9, in create_project\n    return self.send_request(\"POST\", \"/app/rest/projects\", data=project_data,\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    response = CoverageListener(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/utils/listener.py\", line 33, in __init__\n    ).write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py\", line 29, in write_schema\n    self.__manager.write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py\", line 123, in write_schema\n    schema_dict = self._get_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 51, in _get_schema\n    \"paths\": self._paths(),\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 32, in _paths\n    self._get_path_params() + self._get_query_params() + self._get_body_params()\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"36143b073489049a","name":"stdout","source":"36143b073489049a.txt","type":"text/plain","size":634966},{"uid":"3c3ec4b9adf71713","name":"stderr","source":"3c3ec4b9adf71713.txt","type":"text/plain","size":1414}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2},"afterStages":[{"name":"build_conf_data::0","time":{"start":1712583795712,"stop":1712583795712,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"project_data::0","time":{"start":1712583795713,"stop":1712583795734,"duration":21},"status":"broken","statusMessage":"TypeError: can only concatenate list (not \"NoneType\") to list\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 932, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 120, in project_data\n    super_admin.api_manager.project_api.clean_up_project(project_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 25, in clean_up_project\n    self.delete_project(created_project_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 20, in delete_project\n    return self.send_request(\"DELETE\", f\"/app/rest/projects/id:{project_id}\",\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    response = CoverageListener(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/utils/listener.py\", line 33, in __init__\n    ).write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py\", line 29, in write_schema\n    self.__manager.write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py\", line 123, in write_schema\n    schema_dict = self._get_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 51, in _get_schema\n    \"paths\": self._paths(),\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 32, in _paths\n    self._get_path_params() + self._get_query_params() + self._get_body_params()\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"setup_swagger_coverage::0","time":{"start":1712583795735,"stop":1712583801779,"duration":6044},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"user_session::0","time":{"start":1712583795735,"stop":1712583795735,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"suite","value":"Управление билд конфигурациями"},{"name":"severity","value":"normal"},{"name":"parentSuite","value":"API тесты"},{"name":"subSuite","value":"Негативные сценарии"},{"name":"tag","value":"api"},{"name":"tag","value":"build_conf"},{"name":"host","value":"fv-az841-606"},{"name":"thread","value":"7883-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.test_create_build_conf"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"attribute","value":"'id'"},{"name":"status_code","value":"<HTTPStatus.INTERNAL_SERVER_ERROR: 500>"},{"name":"text_error","value":"'InvalidIdentifierException: Build configuration or template ID must not be empty'"},{"name":"value","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"f4d8fd88d1bbb32a","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/236//#testresult/f4d8fd88d1bbb32a","status":"passed","time":{"start":1712582298011,"stop":1712582298199,"duration":188}},{"uid":"984da82c42b785f8","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/235//#testresult/984da82c42b785f8","status":"passed","time":{"start":1712581450377,"stop":1712581451149,"duration":772}}]},"tags":["api","build_conf"]},"source":"8370f1cc6870e5b8.json","parameterValues":["'id'","<HTTPStatus.INTERNAL_SERVER_ERROR: 500>","'InvalidIdentifierException: Build configuration or template ID must not be empty'","''"]}