{"uid":"b45afea877ad62de","name":"Проверка запуска билда","fullName":"tests.backend.test_run_build.TestRunBuild#test_run_build_by_all_roles","historyId":"13d8319349d41aa405d32005393b32a0","time":{"start":1712583795634,"stop":1712583795704,"duration":70},"description":"Проверяется запуск и успешная работа билда","descriptionHtml":"<p>Проверяется запуск и успешная работа билда</p>\n","status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list","statusTrace":"self = <test_run_build.TestRunBuild object at 0x7fc3c13d06a0>\nproject_data = <function project_data.<locals>._create_project_data at 0x7fc3c1024ee0>\nbuild_conf_data = <function build_conf_data.<locals>._create_build_conf_data at 0x7fc3c1025360>\nbuild_run_data = <function build_run_data.<locals>._create_build_run_data at 0x7fc3c10253f0>\nsuper_admin = <entities.user.User object at 0x7fc3c1041fc0>\nuser_create = <function user_create.<locals>._user_create at 0x7fc3c1024f70>\nrole = 'SYSTEM_ADMIN'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.SYSTEM_ADMIN.value\n    ], ids=[\"By system admin\"])\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление запусками билдов\")\n    @allure.sub_suite(\"Запуск билда\")\n    @allure.title('Проверка запуска билда')\n    @allure.description('Проверяется запуск и успешная работа билда')\n    @pytest.mark.build_run\n    @pytest.mark.api\n    def test_run_build_by_all_roles(self, project_data, build_conf_data, build_run_data, super_admin, user_create,\n                                    role):\n        with allure.step('Подготовка данных для создания проекта, билд конфигурации и запуска билда'):\n            project_data_1 = project_data()\n            build_conf_data_1 = build_conf_data(project_data_1.id)\n            build_run_1 = build_run_data(build_conf_data_1.id)\n    \n        with allure.step(f'Создание и авторизация пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/backend/test_run_build.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:96: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\ncustom_requester/custom_requester.py:34: in send_request\n    response = CoverageListener(\nutils/listener.py:33: in __init__\n    ).write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py:29: in write_schema\n    self.__manager.write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py:123: in write_schema\n    schema_dict = self._get_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:51: in _get_schema\n    \"paths\": self._paths(),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_coverage_py.results_writers.swagger_schemas_manager.SwaggerSchemasManager object at 0x7fc3c1043220>\n\n    def _paths(self):\n        path_ = self._uri.raw.split(\"?\")[0]\n        params = (\n>           self._get_path_params() + self._get_query_params() + self._get_body_params()\n        )\nE       TypeError: can only concatenate list (not \"dict\") to list\n\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:32: TypeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1712583779483,"stop":1712583779519,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"setup_swagger_coverage","time":{"start":1712583779519,"stop":1712583795009,"duration":15490},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"user_session","time":{"start":1712583795626,"stop":1712583795626,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"super_admin","time":{"start":1712583795626,"stop":1712583795633,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"build_run_data","time":{"start":1712583795633,"stop":1712583795633,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"user_create","time":{"start":1712583795633,"stop":1712583795633,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"build_conf_data","time":{"start":1712583795633,"stop":1712583795633,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"project_data","time":{"start":1712583795633,"stop":1712583795633,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"testStage":{"description":"Проверяется запуск и успешная работа билда","status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list","statusTrace":"self = <test_run_build.TestRunBuild object at 0x7fc3c13d06a0>\nproject_data = <function project_data.<locals>._create_project_data at 0x7fc3c1024ee0>\nbuild_conf_data = <function build_conf_data.<locals>._create_build_conf_data at 0x7fc3c1025360>\nbuild_run_data = <function build_run_data.<locals>._create_build_run_data at 0x7fc3c10253f0>\nsuper_admin = <entities.user.User object at 0x7fc3c1041fc0>\nuser_create = <function user_create.<locals>._user_create at 0x7fc3c1024f70>\nrole = 'SYSTEM_ADMIN'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.SYSTEM_ADMIN.value\n    ], ids=[\"By system admin\"])\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление запусками билдов\")\n    @allure.sub_suite(\"Запуск билда\")\n    @allure.title('Проверка запуска билда')\n    @allure.description('Проверяется запуск и успешная работа билда')\n    @pytest.mark.build_run\n    @pytest.mark.api\n    def test_run_build_by_all_roles(self, project_data, build_conf_data, build_run_data, super_admin, user_create,\n                                    role):\n        with allure.step('Подготовка данных для создания проекта, билд конфигурации и запуска билда'):\n            project_data_1 = project_data()\n            build_conf_data_1 = build_conf_data(project_data_1.id)\n            build_run_1 = build_run_data(build_conf_data_1.id)\n    \n        with allure.step(f'Создание и авторизация пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/backend/test_run_build.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:96: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\ncustom_requester/custom_requester.py:34: in send_request\n    response = CoverageListener(\nutils/listener.py:33: in __init__\n    ).write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py:29: in write_schema\n    self.__manager.write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py:123: in write_schema\n    schema_dict = self._get_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:51: in _get_schema\n    \"paths\": self._paths(),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_coverage_py.results_writers.swagger_schemas_manager.SwaggerSchemasManager object at 0x7fc3c1043220>\n\n    def _paths(self):\n        path_ = self._uri.raw.split(\"?\")[0]\n        params = (\n>           self._get_path_params() + self._get_query_params() + self._get_body_params()\n        )\nE       TypeError: can only concatenate list (not \"dict\") to list\n\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:32: TypeError","steps":[{"name":"Подготовка данных для создания проекта, билд конфигурации и запуска билда","time":{"start":1712583795634,"stop":1712583795635,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"Создание и авторизация пользователя с ролью SYSTEM_ADMIN","time":{"start":1712583795635,"stop":1712583795703,"duration":68},"status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list\n","statusTrace":"  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/tests/backend/test_run_build.py\", line 34, in test_run_build_by_all_roles\n    role_user = user_create(role)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 96, in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/user_api.py\", line 9, in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    response = CoverageListener(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/utils/listener.py\", line 33, in __init__\n    ).write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py\", line 29, in write_schema\n    self.__manager.write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py\", line 123, in write_schema\n    schema_dict = self._get_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 51, in _get_schema\n    \"paths\": self._paths(),\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 32, in _paths\n    self._get_path_params() + self._get_query_params() + self._get_body_params()\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"21f9f78bb6fb9566","name":"stdout","source":"21f9f78bb6fb9566.txt","type":"text/plain","size":634966},{"uid":"70ed97dbe7f93c27","name":"stderr","source":"70ed97dbe7f93c27.txt","type":"text/plain","size":1414}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2},"afterStages":[{"name":"user_create::0","time":{"start":1712583795793,"stop":1712583795793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"build_run_data::0","time":{"start":1712583795794,"stop":1712583795794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"build_conf_data::0","time":{"start":1712583795806,"stop":1712583796174,"duration":368},"status":"broken","statusMessage":"TypeError: can only concatenate list (not \"NoneType\") to list\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 932, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 136, in build_conf_data\n    super_admin.api_manager.build_conf_api.clean_up_build_conf(build_conf_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/build_conf_api.py\", line 25, in clean_up_build_conf\n    self.delete_build_conf(create_build_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/build_conf_api.py\", line 20, in delete_build_conf\n    return self.send_request(\"DELETE\", f\"/app/rest/buildTypes/id:{create_build_id}\",\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    response = CoverageListener(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/utils/listener.py\", line 33, in __init__\n    ).write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py\", line 29, in write_schema\n    self.__manager.write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py\", line 123, in write_schema\n    schema_dict = self._get_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 51, in _get_schema\n    \"paths\": self._paths(),\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 32, in _paths\n    self._get_path_params() + self._get_query_params() + self._get_body_params()\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"project_data::0","time":{"start":1712583796175,"stop":1712583796203,"duration":28},"status":"broken","statusMessage":"TypeError: can only concatenate list (not \"NoneType\") to list\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 932, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 120, in project_data\n    super_admin.api_manager.project_api.clean_up_project(project_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 25, in clean_up_project\n    self.delete_project(created_project_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 20, in delete_project\n    return self.send_request(\"DELETE\", f\"/app/rest/projects/id:{project_id}\",\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    response = CoverageListener(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/utils/listener.py\", line 33, in __init__\n    ).write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py\", line 29, in write_schema\n    self.__manager.write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py\", line 123, in write_schema\n    schema_dict = self._get_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 51, in _get_schema\n    \"paths\": self._paths(),\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 32, in _paths\n    self._get_path_params() + self._get_query_params() + self._get_body_params()\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0},{"name":"user_session::0","time":{"start":1712583796204,"stop":1712583796204,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"setup_swagger_coverage::0","time":{"start":1712583796205,"stop":1712583802386,"duration":6181},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"API тесты"},{"name":"severity","value":"critical"},{"name":"subSuite","value":"Запуск билда"},{"name":"suite","value":"Управление запусками билдов"},{"name":"tag","value":"api"},{"name":"tag","value":"build_run"},{"name":"host","value":"fv-az841-606"},{"name":"thread","value":"7890-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.test_run_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"role","value":"'SYSTEM_ADMIN'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"a87d49aa33857e9d","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/236//#testresult/a87d49aa33857e9d","status":"passed","time":{"start":1712582297694,"stop":1712582305087,"duration":7393}},{"uid":"4ec85988db0b72a5","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/235//#testresult/4ec85988db0b72a5","status":"passed","time":{"start":1712581451277,"stop":1712581458468,"duration":7191}}]},"tags":["build_run","api"]},"source":"b45afea877ad62de.json","parameterValues":["'SYSTEM_ADMIN'"]}