{"uid":"1f8337fe0ffeac6e","name":"Проверка отсутствия прав на создание проекта","fullName":"tests.backend.test_create_project.TestProjectCreate#test_negative_creating_project_by_roles","historyId":"1d676ecbf52365fda97e5a00b4ed6320","time":{"start":1712584427360,"stop":1712584427584,"duration":224},"description":"Проверяется невозможность создания проекта под определенными ролями","descriptionHtml":"<p>Проверяется невозможность создания проекта под определенными ролями</p>\n","status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list","statusTrace":"self = <test_create_project.TestProjectCreate object at 0x7fd7730a2da0>\nuser_create = <function user_create.<locals>._user_create at 0x7fd772fdbd00>\nrole = 'PROJECT_VIEWER'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.PROJECT_DEVELOPER.value,\n        Roles.PROJECT_VIEWER.value,\n    ], ids=[\"By developer\",\n            \"By viewer\"])\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление проектами\")\n    @allure.sub_suite(\"Создание проекта\")\n    @allure.sub_suite(\"Негативные сценарии\")\n    @allure.title('Проверка отсутствия прав на создание проекта')\n    @allure.description('Проверяется невозможность создания проекта под определенными ролями')\n    @pytest.mark.projects\n    @pytest.mark.api\n    def test_negative_creating_project_by_roles(self, user_create, role):\n        with allure.step('Подготовка данных для создания проекта'):\n            project_data_1 = ProjectData.create_project_data()\n    \n        with allure.step(f'Создание и авторизация пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/backend/test_create_project.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:96: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\ncustom_requester/custom_requester.py:34: in send_request\n    response = CoverageListener(\nutils/listener.py:33: in __init__\n    ).write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py:29: in write_schema\n    self.__manager.write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py:123: in write_schema\n    schema_dict = self._get_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:51: in _get_schema\n    \"paths\": self._paths(),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_coverage_py.results_writers.swagger_schemas_manager.SwaggerSchemasManager object at 0x7fd772f8a3b0>\n\n    def _paths(self):\n        path_ = self._uri.raw.split(\"?\")[0]\n        params = (\n>           self._get_path_params() + self._get_query_params() + self._get_body_params()\n        )\nE       TypeError: can only concatenate list (not \"dict\") to list\n\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:32: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1712584407122,"stop":1712584407161,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage","time":{"start":1712584407161,"stop":1712584427163,"duration":20002},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"super_admin","time":{"start":1712584427350,"stop":1712584427359,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session","time":{"start":1712584427350,"stop":1712584427350,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_create","time":{"start":1712584427359,"stop":1712584427359,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяется невозможность создания проекта под определенными ролями","status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list","statusTrace":"self = <test_create_project.TestProjectCreate object at 0x7fd7730a2da0>\nuser_create = <function user_create.<locals>._user_create at 0x7fd772fdbd00>\nrole = 'PROJECT_VIEWER'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.PROJECT_DEVELOPER.value,\n        Roles.PROJECT_VIEWER.value,\n    ], ids=[\"By developer\",\n            \"By viewer\"])\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление проектами\")\n    @allure.sub_suite(\"Создание проекта\")\n    @allure.sub_suite(\"Негативные сценарии\")\n    @allure.title('Проверка отсутствия прав на создание проекта')\n    @allure.description('Проверяется невозможность создания проекта под определенными ролями')\n    @pytest.mark.projects\n    @pytest.mark.api\n    def test_negative_creating_project_by_roles(self, user_create, role):\n        with allure.step('Подготовка данных для создания проекта'):\n            project_data_1 = ProjectData.create_project_data()\n    \n        with allure.step(f'Создание и авторизация пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/backend/test_create_project.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:96: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\ncustom_requester/custom_requester.py:34: in send_request\n    response = CoverageListener(\nutils/listener.py:33: in __init__\n    ).write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py:29: in write_schema\n    self.__manager.write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py:123: in write_schema\n    schema_dict = self._get_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:51: in _get_schema\n    \"paths\": self._paths(),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_coverage_py.results_writers.swagger_schemas_manager.SwaggerSchemasManager object at 0x7fd772f8a3b0>\n\n    def _paths(self):\n        path_ = self._uri.raw.split(\"?\")[0]\n        params = (\n>           self._get_path_params() + self._get_query_params() + self._get_body_params()\n        )\nE       TypeError: can only concatenate list (not \"dict\") to list\n\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:32: TypeError","steps":[{"name":"Подготовка данных для создания проекта","time":{"start":1712584427361,"stop":1712584427361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Создание и авторизация пользователя с ролью PROJECT_VIEWER","time":{"start":1712584427361,"stop":1712584427583,"duration":222},"status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list\n","statusTrace":"  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/tests/backend/test_create_project.py\", line 75, in test_negative_creating_project_by_roles\n    role_user = user_create(role)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 96, in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/user_api.py\", line 9, in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    response = CoverageListener(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/utils/listener.py\", line 33, in __init__\n    ).write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py\", line 29, in write_schema\n    self.__manager.write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py\", line 123, in write_schema\n    schema_dict = self._get_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 51, in _get_schema\n    \"paths\": self._paths(),\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 32, in _paths\n    self._get_path_params() + self._get_query_params() + self._get_body_params()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"4efb92c3126ce951","name":"stdout","source":"4efb92c3126ce951.txt","type":"text/plain","size":634966},{"uid":"542ba510e89397b4","name":"stderr","source":"542ba510e89397b4.txt","type":"text/plain","size":1414}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"user_create::0","time":{"start":1712584427622,"stop":1712584427622,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session::0","time":{"start":1712584427622,"stop":1712584427623,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage::0","time":{"start":1712584427623,"stop":1712584433175,"duration":5552},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"API тесты"},{"name":"subSuite","value":"Негативные сценарии"},{"name":"suite","value":"Управление проектами"},{"name":"severity","value":"normal"},{"name":"tag","value":"api"},{"name":"tag","value":"projects"},{"name":"host","value":"fv-az768-866"},{"name":"thread","value":"7815-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.test_create_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"role","value":"'PROJECT_VIEWER'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"8ba701f0c01dfab1","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/237//#testresult/8ba701f0c01dfab1","status":"broken","statusDetails":"TypeError: can only concatenate list (not \"dict\") to list","time":{"start":1712583795282,"stop":1712583795345,"duration":63}},{"uid":"2930b6f0805b0aee","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/236//#testresult/2930b6f0805b0aee","status":"passed","time":{"start":1712582297072,"stop":1712582297223,"duration":151}}]},"tags":["projects","api"]},"source":"1f8337fe0ffeac6e.json","parameterValues":["'PROJECT_VIEWER'"]}