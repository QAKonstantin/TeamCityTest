{"uid":"cac940eed1a9885c","name":"Невозможность создания проекта с пустыми атрибутами","fullName":"tests.backend.test_create_project.TestProjectCreate#test_create_project_with_empty_attributes","historyId":"f8011a9aa1ec15fef5df6316cca039e6","time":{"start":1712584426330,"stop":1712584426358,"duration":28},"description":"Проверяется валидация с пустыми атрибутами проекта","descriptionHtml":"<p>Проверяется валидация с пустыми атрибутами проекта</p>\n","status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list","statusTrace":"self = <test_create_project.TestProjectCreate object at 0x7f58161e83a0>\nsuper_admin = <entities.user.User object at 0x7f58160834f0>, attribute = 'name'\nstatus_code = <HTTPStatus.BAD_REQUEST: 400>\ntext_error = 'BadRequestException: Project name cannot be empty', value = ''\n\n    @pytest.mark.parametrize((\"attribute\", \"status_code\", \"text_error\", \"value\"), [\n        (\"name\", HTTPStatus.BAD_REQUEST, \"BadRequestException: Project name cannot be empty\", ''),\n        (\"id\", HTTPStatus.INTERNAL_SERVER_ERROR, \"InvalidIdentifierException: Project ID must not be empty\", ''),\n        (\"parentProject\", HTTPStatus.BAD_REQUEST,\n         \"BadRequestException: No project specified. Either 'id', 'internalId' \"\n         \"or 'locator' attribute should be present.\", {})\n    ], ids=[\"name\",\n            \"id\",\n            \"parentProject\"])\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление проектами\")\n    @allure.sub_suite(\"Создание проекта\")\n    @allure.sub_suite(\"Негативные сценарии\")\n    @allure.title('Невозможность создания проекта с пустыми атрибутами')\n    @allure.description(\n        'Проверяется валидация с пустыми атрибутами проекта')\n    @pytest.mark.projects\n    @pytest.mark.api\n    def test_create_project_with_empty_attributes(self, super_admin, attribute, status_code, text_error, value):\n        with allure.step('Подготовка данных для создания проекта'):\n            project_data_1 = dict(ProjectData.create_project_data())\n            project_data_1[attribute] = value\n    \n        with (allure.step(f'Отправка запроса на создание проекта с пустым {attribute}')):\n>           created_project_response = super_admin.api_manager.project_api.create_project(\n                project_data_1, expected_status=status_code).text\n\ntests/backend/test_create_project.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/project_api.py:9: in create_project\n    return self.send_request(\"POST\", \"/app/rest/projects\", data=project_data,\ncustom_requester/custom_requester.py:34: in send_request\n    response = CoverageListener(\nutils/listener.py:33: in __init__\n    ).write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py:29: in write_schema\n    self.__manager.write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py:123: in write_schema\n    schema_dict = self._get_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:51: in _get_schema\n    \"paths\": self._paths(),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_coverage_py.results_writers.swagger_schemas_manager.SwaggerSchemasManager object at 0x7f5816168df0>\n\n    def _paths(self):\n        path_ = self._uri.raw.split(\"?\")[0]\n        params = (\n>           self._get_path_params() + self._get_query_params() + self._get_body_params()\n        )\nE       TypeError: can only concatenate list (not \"dict\") to list\n\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:32: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1712584407122,"stop":1712584407189,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage","time":{"start":1712584407189,"stop":1712584425369,"duration":18180},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session","time":{"start":1712584426324,"stop":1712584426324,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"super_admin","time":{"start":1712584426324,"stop":1712584426329,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяется валидация с пустыми атрибутами проекта","status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list","statusTrace":"self = <test_create_project.TestProjectCreate object at 0x7f58161e83a0>\nsuper_admin = <entities.user.User object at 0x7f58160834f0>, attribute = 'name'\nstatus_code = <HTTPStatus.BAD_REQUEST: 400>\ntext_error = 'BadRequestException: Project name cannot be empty', value = ''\n\n    @pytest.mark.parametrize((\"attribute\", \"status_code\", \"text_error\", \"value\"), [\n        (\"name\", HTTPStatus.BAD_REQUEST, \"BadRequestException: Project name cannot be empty\", ''),\n        (\"id\", HTTPStatus.INTERNAL_SERVER_ERROR, \"InvalidIdentifierException: Project ID must not be empty\", ''),\n        (\"parentProject\", HTTPStatus.BAD_REQUEST,\n         \"BadRequestException: No project specified. Either 'id', 'internalId' \"\n         \"or 'locator' attribute should be present.\", {})\n    ], ids=[\"name\",\n            \"id\",\n            \"parentProject\"])\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление проектами\")\n    @allure.sub_suite(\"Создание проекта\")\n    @allure.sub_suite(\"Негативные сценарии\")\n    @allure.title('Невозможность создания проекта с пустыми атрибутами')\n    @allure.description(\n        'Проверяется валидация с пустыми атрибутами проекта')\n    @pytest.mark.projects\n    @pytest.mark.api\n    def test_create_project_with_empty_attributes(self, super_admin, attribute, status_code, text_error, value):\n        with allure.step('Подготовка данных для создания проекта'):\n            project_data_1 = dict(ProjectData.create_project_data())\n            project_data_1[attribute] = value\n    \n        with (allure.step(f'Отправка запроса на создание проекта с пустым {attribute}')):\n>           created_project_response = super_admin.api_manager.project_api.create_project(\n                project_data_1, expected_status=status_code).text\n\ntests/backend/test_create_project.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/project_api.py:9: in create_project\n    return self.send_request(\"POST\", \"/app/rest/projects\", data=project_data,\ncustom_requester/custom_requester.py:34: in send_request\n    response = CoverageListener(\nutils/listener.py:33: in __init__\n    ).write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py:29: in write_schema\n    self.__manager.write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py:123: in write_schema\n    schema_dict = self._get_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:51: in _get_schema\n    \"paths\": self._paths(),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_coverage_py.results_writers.swagger_schemas_manager.SwaggerSchemasManager object at 0x7f5816168df0>\n\n    def _paths(self):\n        path_ = self._uri.raw.split(\"?\")[0]\n        params = (\n>           self._get_path_params() + self._get_query_params() + self._get_body_params()\n        )\nE       TypeError: can only concatenate list (not \"dict\") to list\n\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:32: TypeError","steps":[{"name":"Подготовка данных для создания проекта","time":{"start":1712584426330,"stop":1712584426331,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Отправка запроса на создание проекта с пустым name","time":{"start":1712584426331,"stop":1712584426357,"duration":26},"status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list\n","statusTrace":"  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/tests/backend/test_create_project.py\", line 136, in test_create_project_with_empty_attributes\n    created_project_response = super_admin.api_manager.project_api.create_project(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 9, in create_project\n    return self.send_request(\"POST\", \"/app/rest/projects\", data=project_data,\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    response = CoverageListener(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/utils/listener.py\", line 33, in __init__\n    ).write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py\", line 29, in write_schema\n    self.__manager.write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py\", line 123, in write_schema\n    schema_dict = self._get_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 51, in _get_schema\n    \"paths\": self._paths(),\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 32, in _paths\n    self._get_path_params() + self._get_query_params() + self._get_body_params()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"user_session::0","time":{"start":1712584426377,"stop":1712584426377,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage::0","time":{"start":1712584427125,"stop":1712584432768,"duration":5643},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"Управление проектами"},{"name":"subSuite","value":"Негативные сценарии"},{"name":"parentSuite","value":"API тесты"},{"name":"severity","value":"normal"},{"name":"tag","value":"api"},{"name":"tag","value":"projects"},{"name":"host","value":"fv-az768-866"},{"name":"thread","value":"7809-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.test_create_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"attribute","value":"'name'"},{"name":"status_code","value":"<HTTPStatus.BAD_REQUEST: 400>"},{"name":"text_error","value":"'BadRequestException: Project name cannot be empty'"},{"name":"value","value":"''"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"fdb07a3e392ae02d","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/237//#testresult/fdb07a3e392ae02d","status":"broken","statusDetails":"TypeError: can only concatenate list (not \"dict\") to list","time":{"start":1712583795443,"stop":1712583795453,"duration":10}},{"uid":"ce4a41b76d905cb4","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/236//#testresult/ce4a41b76d905cb4","status":"passed","time":{"start":1712582297529,"stop":1712582297565,"duration":36}}]},"tags":["projects","api"]},"source":"cac940eed1a9885c.json","parameterValues":["'name'","<HTTPStatus.BAD_REQUEST: 400>","'BadRequestException: Project name cannot be empty'","''"]}