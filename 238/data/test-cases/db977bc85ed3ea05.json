{"uid":"db977bc85ed3ea05","name":"Проверка создания проекта","fullName":"tests.backend.test_create_project.TestProjectCreate#test_positive_creating_project_by_roles","historyId":"5873742bf1798692fa6d8d5ab10a7a86","time":{"start":1712584428467,"stop":1712584428566,"duration":99},"description":"Проверяется создание проекта и пополнение в общем списке проектов","descriptionHtml":"<p>Проверяется создание проекта и пополнение в общем списке проектов</p>\n","status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list","statusTrace":"self = <test_create_project.TestProjectCreate object at 0x7f869a3b6830>\nproject_data = <function project_data.<locals>._create_project_data at 0x7f869a3fbc70>\nuser_create = <function user_create.<locals>._user_create at 0x7f869a3fbbe0>\nrole = 'PROJECT_ADMIN'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.SYSTEM_ADMIN.value,\n        Roles.PROJECT_ADMIN.value,\n        Roles.AGENT_MANAGER.value,\n    ], ids=[\"By system admin\",\n            \"By project admin\",\n            \"By agent manager\"])\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление проектами\")\n    @allure.sub_suite(\"Создание проекта\")\n    @allure.title('Проверка создания проекта')\n    @allure.description('Проверяется создание проекта и пополнение в общем списке проектов')\n    @pytest.mark.projects\n    @pytest.mark.api\n    def test_positive_creating_project_by_roles(self, project_data, user_create, role):\n        with allure.step('Подготовка данных для создания проекта'):\n            project_data_1 = project_data()\n    \n        with allure.step(f'Создание и авторизация пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/backend/test_create_project.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:96: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\ncustom_requester/custom_requester.py:34: in send_request\n    response = CoverageListener(\nutils/listener.py:33: in __init__\n    ).write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py:29: in write_schema\n    self.__manager.write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py:123: in write_schema\n    schema_dict = self._get_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:51: in _get_schema\n    \"paths\": self._paths(),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_coverage_py.results_writers.swagger_schemas_manager.SwaggerSchemasManager object at 0x7f869a2039a0>\n\n    def _paths(self):\n        path_ = self._uri.raw.split(\"?\")[0]\n        params = (\n>           self._get_path_params() + self._get_query_params() + self._get_body_params()\n        )\nE       TypeError: can only concatenate list (not \"dict\") to list\n\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:32: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1712584407154,"stop":1712584407179,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage","time":{"start":1712584407179,"stop":1712584428457,"duration":21278},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session","time":{"start":1712584428457,"stop":1712584428457,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"super_admin","time":{"start":1712584428457,"stop":1712584428465,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project_data","time":{"start":1712584428465,"stop":1712584428465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_create","time":{"start":1712584428465,"stop":1712584428465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяется создание проекта и пополнение в общем списке проектов","status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list","statusTrace":"self = <test_create_project.TestProjectCreate object at 0x7f869a3b6830>\nproject_data = <function project_data.<locals>._create_project_data at 0x7f869a3fbc70>\nuser_create = <function user_create.<locals>._user_create at 0x7f869a3fbbe0>\nrole = 'PROJECT_ADMIN'\n\n    @pytest.mark.parametrize(\"role\", [\n        Roles.SYSTEM_ADMIN.value,\n        Roles.PROJECT_ADMIN.value,\n        Roles.AGENT_MANAGER.value,\n    ], ids=[\"By system admin\",\n            \"By project admin\",\n            \"By agent manager\"])\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.parent_suite(\"API тесты\")\n    @allure.suite(\"Управление проектами\")\n    @allure.sub_suite(\"Создание проекта\")\n    @allure.title('Проверка создания проекта')\n    @allure.description('Проверяется создание проекта и пополнение в общем списке проектов')\n    @pytest.mark.projects\n    @pytest.mark.api\n    def test_positive_creating_project_by_roles(self, project_data, user_create, role):\n        with allure.step('Подготовка данных для создания проекта'):\n            project_data_1 = project_data()\n    \n        with allure.step(f'Создание и авторизация пользователя с ролью {role}'):\n>           role_user = user_create(role)\n\ntests/backend/test_create_project.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nconftest.py:96: in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\napi/user_api.py:9: in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\ncustom_requester/custom_requester.py:34: in send_request\n    response = CoverageListener(\nutils/listener.py:33: in __init__\n    ).write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py:29: in write_schema\n    self.__manager.write_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py:123: in write_schema\n    schema_dict = self._get_schema()\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:51: in _get_schema\n    \"paths\": self._paths(),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <swagger_coverage_py.results_writers.swagger_schemas_manager.SwaggerSchemasManager object at 0x7f869a2039a0>\n\n    def _paths(self):\n        path_ = self._uri.raw.split(\"?\")[0]\n        params = (\n>           self._get_path_params() + self._get_query_params() + self._get_body_params()\n        )\nE       TypeError: can only concatenate list (not \"dict\") to list\n\n../../../.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py:32: TypeError","steps":[{"name":"Подготовка данных для создания проекта","time":{"start":1712584428467,"stop":1712584428467,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Создание и авторизация пользователя с ролью PROJECT_ADMIN","time":{"start":1712584428467,"stop":1712584428565,"duration":98},"status":"broken","statusMessage":"TypeError: can only concatenate list (not \"dict\") to list\n","statusTrace":"  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/tests/backend/test_create_project.py\", line 32, in test_positive_creating_project_by_roles\n    role_user = user_create(role)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 96, in _user_create\n    super_admin.api_manager.user_api.create_user(user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/user_api.py\", line 9, in create_user\n    return self.send_request(\"POST\", \"/app/rest/users\", data=user_data)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    response = CoverageListener(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/utils/listener.py\", line 33, in __init__\n    ).write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py\", line 29, in write_schema\n    self.__manager.write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py\", line 123, in write_schema\n    schema_dict = self._get_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 51, in _get_schema\n    \"paths\": self._paths(),\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 32, in _paths\n    self._get_path_params() + self._get_query_params() + self._get_body_params()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"project_data::0","time":{"start":1712584428755,"stop":1712584428770,"duration":15},"status":"broken","statusMessage":"TypeError: can only concatenate list (not \"NoneType\") to list\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 932, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/conftest.py\", line 120, in project_data\n    super_admin.api_manager.project_api.clean_up_project(project_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 25, in clean_up_project\n    self.delete_project(created_project_id)\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/api/project_api.py\", line 20, in delete_project\n    return self.send_request(\"DELETE\", f\"/app/rest/projects/id:{project_id}\",\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/custom_requester/custom_requester.py\", line 34, in send_request\n    response = CoverageListener(\n  File \"/home/runner/work/TeamCity_Test/TeamCity_Test/utils/listener.py\", line 33, in __init__\n    ).write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/request_schema_handler.py\", line 29, in write_schema\n    self.__manager.write_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/base_schemas_manager.py\", line 123, in write_schema\n    schema_dict = self._get_schema()\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 51, in _get_schema\n    \"paths\": self._paths(),\n  File \"/home/runner/.local/lib/python3.10/site-packages/swagger_coverage_py/results_writers/swagger_schemas_manager.py\", line 32, in _paths\n    self._get_path_params() + self._get_query_params() + self._get_body_params()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"user_create::0","time":{"start":1712584428755,"stop":1712584428755,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"user_session::0","time":{"start":1712584428770,"stop":1712584428771,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_swagger_coverage::0","time":{"start":1712584429025,"stop":1712584435542,"duration":6517},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"suite","value":"Управление проектами"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"API тесты"},{"name":"subSuite","value":"Создание проекта"},{"name":"tag","value":"api"},{"name":"tag","value":"projects"},{"name":"host","value":"fv-az768-866"},{"name":"thread","value":"7812-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.test_create_project"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"role","value":"'PROJECT_ADMIN'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":2,"unknown":0,"total":4},"items":[{"uid":"9abaac22db207d17","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/237//#testresult/9abaac22db207d17","status":"broken","statusDetails":"TypeError: can only concatenate list (not \"dict\") to list","time":{"start":1712583795016,"stop":1712583795090,"duration":74}},{"uid":"e7a5541e119e9a21","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/236//#testresult/e7a5541e119e9a21","status":"passed","time":{"start":1712582297500,"stop":1712582298122,"duration":622}},{"uid":"f87a38127d6ea3cd","reportUrl":"https://QAKonstantin.github.io/TeamCity_Test/235//#testresult/f87a38127d6ea3cd","status":"passed","time":{"start":1712581451265,"stop":1712581451655,"duration":390}}]},"tags":["projects","api"]},"source":"db977bc85ed3ea05.json","parameterValues":["'PROJECT_ADMIN'"]}